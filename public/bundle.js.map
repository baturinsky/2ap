{
  "version": 3,
  "sources": ["../node_modules/preact/src/util.js", "../node_modules/preact/src/options.js", "../node_modules/preact/src/create-element.js", "../node_modules/preact/src/component.js", "../node_modules/preact/src/create-context.js", "../node_modules/preact/src/constants.js", "../node_modules/preact/src/diff/children.js", "../node_modules/preact/src/diff/props.js", "../node_modules/preact/src/diff/index.js", "../node_modules/preact/src/render.js", "../node_modules/preact/src/clone-element.js", "../node_modules/preact/src/diff/catch-error.js", "../src/Util.ts", "../src/v2.ts", "../src/sym-shadowcast.ts", "../src/Item.ts", "../src/Cell.ts", "../src/Team.ts", "../src/Unit.ts", "../src/Gun.ts", "../src/Terrain.ts", "../src/MovingText.ts", "../src/settings.ts", "../src/RenderSchematic.ts", "../src/Campaigns.ts", "../src/Game.ts", "../node_modules/linkstate/node_modules/dlv/dist/dlv.umd.js", "../node_modules/linkstate/src/index.js", "../src/Help.tsx", "../src/lang.ts", "../src/GUI.tsx", "../src/index.tsx"],
  "sourcesContent": ["import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || setTimeout)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\n\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n", "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "export type Context2d =\r\n  | CanvasRenderingContext2D\r\n  | OffscreenCanvasRenderingContext2D;\r\nexport type Canvas2d = HTMLCanvasElement | OffscreenCanvas;\r\n\r\nexport function min<T>(list: T[], fn: (T) => number) {\r\n  let minV = Number.MAX_VALUE;\r\n  let minI = -1;\r\n  for (let i = 0; i < list.length; i++) {\r\n    let v = fn(list[i]);\r\n    if (minV > v) {\r\n      minV = v;\r\n      minI = i;\r\n    }\r\n  }\r\n  if (minI >= 0) return { ind: minI, item: list[minI], val: minV };\r\n}\r\n\r\nexport function max<T>(list: T[], fn: (T) => number) {\r\n  let r = min(list, t => -fn(t));\r\n  if (!r) return;\r\n  r.val = -r.val;\r\n  return r;\r\n}\r\n\r\nexport function createCanvas(w: number, h: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  canvas.width = w;\r\n  canvas.height = h;\r\n  return canvas;\r\n}\r\n\r\nexport function createOffscreenCanvas(w: number, h: number) {\r\n  return new OffscreenCanvas(w, h);\r\n}\r\n\r\nexport function canvasCache(\r\n  size: [number, number],\r\n  draw: (\r\n    ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\r\n  ) => void\r\n): HTMLCanvasElement | OffscreenCanvas {\r\n  const canvas = createCanvas(...size);\r\n  const ctx = canvas.getContext(\"2d\");\r\n  ctx.lineWidth = 1;\r\n  ctx.strokeStyle = \"#000\";\r\n  draw(ctx);\r\n  return canvas;\r\n}\r\n\r\nexport function randomElement<T>(list: T[], rni: () => number) {\r\n  return list[rni() % list.length];\r\n}\r\n\r\nexport function weightedRandom(a: number[], rni: () => number) {\r\n  let roll = (rni() % a.reduce((x, y) => x + y)) - a[0];\r\n  let i = 0;\r\n  while (roll >= 0) roll -= a[++i];\r\n  return i;\r\n}\r\n\r\nexport function random(seed) {\r\n  seed = seed % 2147483647;\r\n  if (seed <= 0) seed += 2147483646;\r\n  return () => {\r\n    return (seed = (seed * 16807) % 2147483647);\r\n  };\r\n}\r\n\r\nexport function eachFrame(fun: (time: number) => void) {\r\n  requestAnimationFrame(time => {\r\n    fun(time);\r\n    eachFrame(fun);\r\n  });\r\n}\r\n\r\nexport function idiv(a: number, b: number) {\r\n  return Math.floor(a / b);\r\n}\r\n\r\nexport function bind(target, name, descriptor) {\r\n  return {\r\n    get() {\r\n      const bound = descriptor.value.bind(this);\r\n\r\n      Object.defineProperty(this, name, {\r\n        value: bound\r\n      });\r\n\r\n      return bound;\r\n    }\r\n  };\r\n}\r\n\r\nexport function parseWithNewLines(json: string) {\r\n  if (!json) return null;\r\n  let split = json.split('\"');\r\n  for (let i = 1; i < split.length; i += 2) {\r\n    split[i] = split[i].replace(/\\n/g, \"\\\\n\");\r\n  }\r\n  return JSON.parse(split.join('\"'));\r\n}\r\n\r\nexport function signed(n: number):string {\r\n  return (n > 0 ? \"+\":\"\") + n;\r\n}\r\n\r\nexport function svgImg(attrs:string, body:string){\r\n  return `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${body}</svg>')`;\r\n}", "export type V2 = [number, number];\r\n\r\nexport function round(v: V2): V2 {\r\n  return [Math.round(v[0]), Math.round(v[1])];\r\n}\r\n\r\nexport function pretty(v: V2): string {\r\n  return v.join(\",\");\r\n}\r\n\r\nexport function sum(a: V2, b: V2, m = 1): V2 {\r\n  return [a[0] + b[0] * m, a[1] + b[1] * m];\r\n}\r\n\r\nexport function sub(a: V2, b: V2): V2 {\r\n  return [a[0] - b[0], a[1] - b[1]];\r\n}\r\n\r\nexport function mul(a: V2, b: V2, m = 1): V2 {\r\n  return [a[0] * b[0] * m, a[1] * b[1] * m];\r\n}\r\n\r\nexport function inc(a: V2, b: V2, m = 1) {\r\n  a[0] += b[0] * m;\r\n  a[1] += b[1] * m;\r\n}\r\n\r\nexport function length(d: V2) {\r\n  return Math.sqrt(d[0] * d[0] + d[1] * d[1]);\r\n}\r\n\r\nexport function norm(v: V2, scale:number = 1): V2 {\r\n  let d = length(v) || 1;\r\n  return [v[0] / d * scale, v[1] / d * scale];\r\n}\r\n\r\nexport function dist(a: V2, b: V2): number {\r\n  return length([a[0] - b[0], a[1] - b[1]]);\r\n}\r\n\r\nexport function dot(a: V2, b: V2): number {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\nexport function det(a: V2, b: V2): number {\r\n  return a[0] * b[1] - a[1] * b[0];\r\n}\r\n\r\nexport function rot(v: V2): V2 {\r\n  return [v[1], -v[0]];\r\n}\r\n\r\nexport function scale(v: V2, n: number): V2 {\r\n  return [v[0] * n, v[1] * n];\r\n}\r\n\r\nexport function along(start: V2, end: V2, step = 1) {\r\n  let d = dist(start, end);\r\n  let dots: V2[] = [];\r\n  for (let i = 0; i <= d; i += step) {\r\n    dots.push(lerp(start, end, i));\r\n  }\r\n  return dots;\r\n}\r\n\r\nexport function lerp(start: V2, end: V2, amt: number): V2 {\r\n  return [\r\n    start[0] * (1 - amt) + amt * end[0],\r\n    start[1] * (1 - amt) + amt * end[1]\r\n  ];\r\n}\r\n\r\nexport function angleBetween(a:V2, b:V2){\r\n  return Math.atan2(det(a,b), dot(a,b))\r\n}\r\n\r\nexport function fromAngle(a: number): V2 {\r\n  return [Math.cos(a), Math.sin(a)];\r\n}\r\n\r\nexport function reflect(vel: V2, surface: V2) {\r\n  let mn = norm(surface);\r\n  let mr = rot(mn);\r\n  let c1 = scale(mn, dot(vel, mn))\r\n  let c2 = scale(mr, dot(vel, mr))\r\n  return sub(c1, c2);\r\n}\r\n\r\nexport function bounce(vel: V2, normal: V2): V2 {\r\n  let surfaceAngle = Math.atan2(normal[1], normal[0]);\r\n  let dropAngle = Math.atan2(vel[1], -vel[0]);\r\n  let returnAngle = surfaceAngle * 2 + dropAngle + Math.PI;\r\n  return fromAngle(returnAngle);\r\n}\r\n\r\nexport function hitTestPipe(point: V2, prev: V2, next: V2, w: number) {\r\n  let toNext = sub(next, prev);\r\n  let toSide = rot(norm(toNext));\r\n  let toA = sub(point, prev);\r\n  let toNextL = length(toNext);\r\n  let depth = dot(toNext, toA) / toNextL;\r\n  let width = dot(toSide, toA);\r\n  let inside = Math.abs(width) <= w && 0 <= depth && depth <= toNextL;\r\n  return inside;\r\n}\r\n\r\n", "//https://gist.github.com/as-f/59bb06ced7e740e11ec7dda9d82717f6#file-shadowcasting-js\r\n\r\nexport default function shadowcast(cx:number, cy:number, transparent:(a:number,b:number) => boolean, reveal:(a:number,b:number) => void) {\r\n  'use strict';\r\n  /**\r\n   * Scan one row of one octant.\r\n   * @param y - distance from the row scanned to the center\r\n   * @param start - starting slope\r\n   * @param end - ending slope\r\n   * @param transform - describes the transfrom to apply on x and y; determines the octant\r\n   */\r\n  var scan = function(y, start, end, transform) {\r\n      if (start >= end) {\r\n          return;\r\n      }\r\n      var xmin = Math.round((y - 0.5) * start);\r\n      var xmax = Math.ceil((y + 0.5) * end - 0.5);\r\n      for (var x = xmin; x <= xmax; x++) {\r\n          var realx = cx + transform.xx * x + transform.xy * y;\r\n          var realy = cy + transform.yx * x + transform.yy * y;\r\n          if (transparent(realx, realy)) {\r\n              if (x >= y * start && x <= y * end) {\r\n                  reveal(realx, realy);\r\n              }\r\n          } else {\r\n              if (x >= (y - 0.5) * start && x - 0.5 <= y * end) {\r\n                  reveal(realx, realy);\r\n              }\r\n              scan(y + 1, start, (x - 0.5) / y, transform);\r\n              start = (x + 0.5) / y;\r\n              if (start >= end) {\r\n                  return;\r\n              }\r\n          }\r\n      }\r\n      scan(y + 1, start, end, transform);\r\n  };\r\n  // An array of transforms, each corresponding to one octant.\r\n  var transforms = [\r\n      { xx:  1, xy:  0, yx:  0, yy:  1 },\r\n      { xx:  1, xy:  0, yx:  0, yy: -1 },\r\n      { xx: -1, xy:  0, yx:  0, yy:  1 },\r\n      { xx: -1, xy:  0, yx:  0, yy: -1 },\r\n      { xx:  0, xy:  1, yx:  1, yy:  0 },\r\n      { xx:  0, xy:  1, yx: -1, yy:  0 },\r\n      { xx:  0, xy: -1, yx:  1, yy:  0 },\r\n      { xx:  0, xy: -1, yx: -1, yy:  0 }\r\n  ];\r\n  reveal(cx, cy);\r\n  // Scan each octant\r\n  for (var i = 0; i < 8; i++) {\r\n      scan(1, 0, 1, transforms[i]);\r\n  }\r\n};", "import Terrain from \"./Terrain\";\r\nimport Cell from \"./Cell\";\r\nimport * as v2 from \"./v2\";\r\nimport { V2 } from \"./v2\";\r\n\r\nexport default class Item {\r\n  static readonly MEDKIT = \"medkit\";\r\n\r\n  constructor(public type: string){\r\n  }\r\n\r\n  serialize(){\r\n    return this.type;\r\n  }\r\n\r\n  static deserialize(type:string){\r\n    return new Item(type)\r\n  }\r\n}", "import Unit from \"./Unit\";\r\nimport { canvasCache, Context2d } from \"./Util\";\r\nimport Terrain from \"./Terrain\";\r\nimport * as v2 from \"./v2\";\r\nimport shadowcast from \"./sym-shadowcast\";\r\nimport Item from \"./Item\";\r\n\r\nexport default class Cell {\r\n  \r\n  /** raw FOV, without XCOM tricks */\r\n  rfov = new Set<number>(); \r\n  \r\n  /** FOV with respect of stepping out from this cell AND to target cell.*/\r\n  xfov = new Set<number>(); \r\n  \r\n  /** FOV with respect of stepping out from this cell, but not to target cell. For ground attacks and overwatch.*/\r\n  dfov = new Set<number>(); \r\n\r\n  /** Points from where this cell is visible */\r\n  povs: Cell[] = [];\r\n\r\n  /** Point of views for unit standing on this cell. Includes cell itself and cells perpendicular to the adjacent cover*/\r\n  peeked: Cell[] = [];\r\n\r\n  /** List of cells with cover next to this cell */\r\n  cover: number[];\r\n\r\n  /** Is this cell impassible */\r\n  hole: boolean;\r\n\r\n  items: Item[] = [];\r\n\r\n  constructor(\r\n    public terrain: Terrain,\r\n    public cid: number,\r\n    /** \r\n     * 0 - passable, standable, no cover, transparent\r\n     * 1 - passable, not standable, half cover, transparent\r\n     * 2 - impassable, full cover, opaque\r\n     */\r\n    public obstacle: number,\r\n    public unit?: Unit\r\n  ) {}\r\n\r\n  calculatePovAndCover() {\r\n    if (this.obstacle) return;\r\n    this.cover = this.terrain.obstacles(this.cid);\r\n    this.calculatePovs();\r\n  }\r\n\r\n  calculateFov() {\r\n    if (this.opaque) return;\r\n\r\n    let t = this.terrain;\r\n\r\n    let [x, y] = this.at;\r\n\r\n    let visibility = new Set<number>();\r\n    shadowcast(\r\n      x,\r\n      y,\r\n      (x, y) => !t.cellAt(x, y).opaque,\r\n      (x, y) => {\r\n        visibility.add(t.cid(x, y));\r\n      }\r\n    );\r\n\r\n    this.rfov = visibility;\r\n  }\r\n\r\n  calculateXFov() {\r\n    let visibility = new Set<number>();\r\n\r\n    for (let p of this.povs) {\r\n      for (let visible of p.rfov) {\r\n        let visibleTile = this.terrain.cells[visible];\r\n        for (let neighbor of visibleTile.peeked) visibility.add(neighbor.cid);\r\n      }\r\n    }\r\n    this.xfov = visibility;\r\n  }\r\n\r\n  calculateDFov() {\r\n    let visibility = new Set<number>();\r\n\r\n    for (let p of this.povs) {\r\n      for (let visible of p.rfov) {\r\n        visibility.add(visible);\r\n      }\r\n    }\r\n    this.dfov = visibility;\r\n  }\r\n\r\n\r\n  get at() {\r\n    return this.terrain.fromCid(this.cid);\r\n  }\r\n\r\n  dist(other: Cell | Unit) {\r\n    return v2.dist(this.at, other.at);\r\n  }\r\n\r\n  seal() {\r\n    this.obstacle = 2;\r\n    delete this.unit;\r\n    this.items = []\r\n  }\r\n\r\n  get opaque() {\r\n    return this.obstacle == 2;\r\n  }\r\n\r\n  get passable(){\r\n    return this.obstacle<2 && !this.hole;\r\n  }\r\n\r\n  get standable(){\r\n    return this.obstacle==0 && !this.hole && !this.unit;\r\n  }\r\n\r\n\r\n  calculatePovs() {\r\n    this.povs = [];\r\n    let t = this.terrain;\r\n    let cid = this.cid;\r\n    this.povs.push(this);\r\n    for (let dir = 0; dir < 8; dir += 2) {\r\n      let forward = cid + t.dir8Deltas[dir];\r\n      if (!t.cells[forward].obstacle) continue;\r\n      let left = [\r\n        cid + t.dir8Deltas[(dir + 6) % 8],\r\n        cid + t.dir8Deltas[(dir + 7) % 8]\r\n      ];\r\n      let right = [\r\n        cid + t.dir8Deltas[(dir + 2) % 8],\r\n        cid + t.dir8Deltas[(dir + 1) % 8]\r\n      ];\r\n      for (let side of [left, right]) {\r\n        let peekable =\r\n          t.cells[side[0]].standable && t.cells[side[1]].obstacle <= 1;\r\n        if (peekable) {\r\n          this.povs.push(t.cells[side[0]]);\r\n        }\r\n      }\r\n    }\r\n    for (let c of this.povs) {\r\n      c.peeked.push(this);\r\n    }\r\n  }\r\n\r\n  serializable(){\r\n    return this.items.length>0;\r\n  }\r\n\r\n  serialize(){\r\n    return {items:this.items.map(i =>i.serialize())}\r\n  }\r\n\r\n  deserialize(data:{items:string[]}){\r\n    for(let item of data.items){\r\n      this.addItem(Item.deserialize(item))\r\n    }\r\n  }\r\n\r\n  addItem(item:Item){\r\n    this.items.push(item);\r\n  }\r\n\r\n}\r\n", "import Terrain from \"./Terrain\";\r\n\r\nexport default class Team {\r\n  strength: number[];\r\n  weakness: number[];\r\n  distance: number[];\r\n  fov = new Set<number>();\r\n\r\n  static readonly BLUE = 0;\r\n  static readonly RED = 1;\r\n  \r\n  constructor(public terrain: Terrain, public faction: number) {}\r\n\r\n  serialize() {\r\n    return {\r\n      units: this.units.map(u => u.serialize())\r\n    };\r\n  }\r\n\r\n  calculate() {\r\n    this.strength = [];\r\n    this.weakness = [];\r\n    this.distance = [];\r\n\r\n    let t = this.terrain;\r\n    this.fov.clear();\r\n\r\n    for (let unit of this.units) {\r\n      for (let cell of unit.cell.xfov) this.fov.add(cell);\r\n    }\r\n\r\n    let enemyTeam = this.terrain.teams[1 - this.faction];\r\n\r\n    for (let cid of this.fov) {\r\n      let cell = this.terrain.cells[cid];\r\n\r\n      for (let enemy of enemyTeam.units) {\r\n        let tcell = enemy.cell;\r\n\r\n        let strength = (4 - t.cover(cell, tcell)) % 5;\r\n        if (!(this.strength[cid] > strength)) this.strength[cid] = strength;\r\n\r\n        let weakness = (4 - t.cover(tcell, cell)) % 5;\r\n        if (!(this.weakness[cid] > weakness)) this.weakness[cid] = weakness;\r\n\r\n        if (strength > 0 || weakness > 0) {\r\n          let distance = cell.dist(tcell);\r\n          if (!(this.distance[cid] <= distance)) this.distance[cid] = distance;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async think() {\r\n    this.terrain.aiTurn = true;\r\n\r\n    this.calculate();\r\n    for (let unit of this.terrain.units) {\r\n      if (unit.team == this && unit.alive) {\r\n        await unit.think();\r\n      }\r\n    }\r\n\r\n    this.terrain.aiTurn = false;\r\n  }\r\n\r\n  endTurn(){\r\n\r\n  }\r\n\r\n  beginTurn() {\r\n    for (let c of this.units) {\r\n      c.ap = 2;\r\n    }\r\n    this.terrain.activeTeam = this;\r\n  }\r\n\r\n  get units() {\r\n    return this.terrain.units.filter(c => c.team == this);\r\n  }\r\n\r\n  get enemy() {\r\n    return this.terrain.teams[1 - this.faction];\r\n  }\r\n\r\n  get name() {\r\n    return [\"RED\", \"BLUE\"][this.faction];\r\n  }\r\n\r\n  get color() {\r\n    return [\"RED\", \"BLUE\"][this.faction];\r\n  }\r\n}\r\n", "import Gun from \"./Gun\";\r\nimport { idiv, max } from \"./Util\";\r\nimport Terrain from \"./Terrain\";\r\nimport Cell from \"./Cell\";\r\nimport * as v2 from \"./v2\";\r\nimport Team from \"./Team\";\r\nimport { UnitConf, UnitState } from \"./Campaigns\";\r\nimport { V2 } from \"./v2\";\r\n\r\nconst velocityAccuracyScale = 4*0, velocityDefenceScale = 4*0;\r\n\r\nexport default class Unit {\r\n  static readonly EYE = -1;\r\n  static readonly GUNNER = 1;\r\n  static readonly ASSAULT = 2;\r\n  static readonly SNIPER = 3;\r\n  static readonly RECON = 4;\r\n  static readonly MEDIC = 5;\r\n  static readonly HEAVY = 6;\r\n  static readonly COMMANDER = 7;\r\n\r\n  dists: number[][];\r\n\r\n  speed = 5;\r\n  maxHP = 10;\r\n  hp = this.maxHP;\r\n  ap = 2;\r\n\r\n  exhaustion = 0;\r\n  stress = 0;\r\n  focus: V2 = [0, 0];\r\n  velocity: V2 = [0, 0];\r\n\r\n  armor = 0;\r\n\r\n  sight = 20;\r\n  def = 0;\r\n\r\n  aggression = 0;\r\n  name = \"dude\";\r\n\r\n  symbol = \"d\";\r\n\r\n  config: UnitConf;\r\n  team: Team;\r\n  gun: Gun;\r\n\r\n  get terrain() {\r\n    return this.cell.terrain;\r\n  }\r\n\r\n  get cid() {\r\n    return this.cell.cid;\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      symbol: this.symbol,\r\n      hp: this.hp,\r\n      ap: this.ap,\r\n      cid: this.cid,\r\n      exhaustion: this.exhaustion,\r\n      stress: this.stress,\r\n      focus: this.focus,\r\n      velocity: this.velocity\r\n    };\r\n  }\r\n\r\n  static readonly saveFields = \"hp ap exhaustion stress focus velocity\".split(\r\n    \" \"\r\n  );\r\n\r\n  constructor(public cell: Cell, o: UnitState) {\r\n    this.symbol = o.symbol.toLowerCase();\r\n    cell.unit = this;\r\n\r\n    let terrain = cell.terrain;\r\n    this.terrain.units.push(this);\r\n\r\n    let conf = terrain.campaign.units[this.symbol];\r\n\r\n    Object.assign(this, conf);\r\n    this.hp = this.maxHP;\r\n\r\n    console.assert(conf != null, conf);\r\n\r\n    this.team =\r\n      terrain.teams[o.symbol.toUpperCase() == o.symbol ? Team.BLUE : Team.RED];\r\n\r\n    for (let key of Unit.saveFields) {\r\n      if (key in o) this[key] = o[key];\r\n    }\r\n\r\n    this.gun = this.terrain.campaign.guns[conf.gun];\r\n  }\r\n\r\n  get blue() {\r\n    return this.team == this.terrain.we;\r\n  }\r\n\r\n  pathTo(to: Cell): Cell[] {\r\n    let cid = to.cid;\r\n    let path = [cid];\r\n    while (true) {\r\n      cid = this.dists[cid][1];\r\n      if (cid < 0) break;\r\n      path.push(cid);\r\n    }\r\n\r\n    return path.reverse().map(cid => this.terrain.cells[cid]);\r\n  }\r\n\r\n  get strokeColor() {\r\n    return this.blue ? \"#00a\" : \"#a00\";\r\n  }\r\n\r\n  get x() {\r\n    return this.cid % this.terrain.w;\r\n  }\r\n  get y() {\r\n    return idiv(this.cid, this.terrain.w);\r\n  }\r\n\r\n  reachable(cell: Cell) {\r\n    return this.apCost(cell) <= this.ap;\r\n  }\r\n\r\n  calculateDists() {\r\n    this.dists = this.terrain.calcDists(this.cid);\r\n  }\r\n\r\n  calculate() {\r\n    this.calculateDists();\r\n  }\r\n\r\n  cover(target: Cell) {\r\n    return this.terrain.cover(this.cell, target);\r\n  }\r\n\r\n  get at() {\r\n    return this.terrain.fromCid(this.cid);\r\n  }\r\n\r\n  apCost(cell: Cell) {\r\n    if (!this.dists) return Number.MAX_VALUE;\r\n    let l = this.dists[cell.cid][0];\r\n    let moves = Math.ceil(l / this.speed);\r\n    return moves;\r\n  }\r\n\r\n  canShoot() {\r\n    return this.ap > 0;\r\n  }\r\n\r\n  perpendicularVelocity(target: V2) {\r\n    if (!this.moving) return 0;\r\n    let dir = v2.norm(v2.sub(target, this.at));\r\n    let p = v2.det(dir, this.velocity);\r\n    return p;\r\n  }\r\n\r\n  velocityAccuracyBonus(target: V2) {\r\n    return -Math.round(Math.abs(this.perpendicularVelocity(target)) * velocityAccuracyScale);\r\n  }\r\n\r\n  velocityDefenceBonus(target: V2) {\r\n    return Math.round(Math.abs(this.perpendicularVelocity(target)) * velocityDefenceScale);\r\n  }\r\n\r\n  focusAccuracyBonus(target: V2) {\r\n    if (!this.focused) return 0;\r\n    let angle = v2.angleBetween(v2.sub(target, this.at), this.focus);\r\n    let bonus = 1 - (4 * Math.abs(angle)) / Math.PI;\r\n    if (bonus < 0) bonus /= 2;\r\n    return Math.round(bonus * v2.length(this.focus));\r\n  }\r\n\r\n  focusDefenceBonus(target: V2) {\r\n    return this.focusAccuracyBonus(target);\r\n  }\r\n\r\n  hitChance(tcell:Cell, tunit?:Unit, direct = false, bonuses?:{\r\n    cover?: number;\r\n    dodge?: number;\r\n    distance?: number;\r\n    accuracy?: number;\r\n    ownVelocity?: number;\r\n    targetVelocity?: number;\r\n    ownFocus?: number;\r\n    targetFocus?: number;\r\n  }): number {\r\n    if(!tunit)\r\n      tunit = tcell.unit;\r\n    if(tunit == this)\r\n      return 0;\r\n    let fov = direct ? this.cell.dfov : this.cell.xfov;\r\n    let tat = tcell.at;\r\n    if (!fov.has(tcell.cid)) return 0;\r\n    let cover = this.cover(tcell || tunit.cell);\r\n    if (cover == -1) return 0;\r\n    if(!bonuses)\r\n      bonuses = {}\r\n    bonuses.accuracy = this.gun.accuracy;\r\n    bonuses.cover = -cover * 25;\r\n    bonuses.dodge = -tunit.def;\r\n    bonuses.distance = -this.gun.accuracyPenalty(this.dist(tunit));\r\n    \r\n    bonuses.ownVelocity = this.velocityAccuracyBonus(tat);\r\n     bonuses.targetVelocity = -tunit.velocityDefenceBonus(this.at);\r\n\r\n    bonuses.ownFocus = this.focusAccuracyBonus(tat);\r\n    bonuses.targetFocus = -tunit.focusDefenceBonus(this.at);\r\n\r\n    if(bonuses.cover < bonuses.targetVelocity)\r\n      bonuses.targetVelocity = 0;\r\n    else\r\n      bonuses.cover = 0;\r\n\r\n    console.log(JSON.stringify(bonuses));\r\n\r\n    let chance = Math.round(Object.values(bonuses).reduce((a, b) => a + b));\r\n    return chance;\r\n  }\r\n\r\n  die() {\r\n    this.terrain.units = this.terrain.units.filter(c => c.hp > 0);\r\n    delete this.cell.unit;\r\n    if (this.team.units.length == 0) {\r\n      this.terrain.declareVictory(this.team.enemy);\r\n    }\r\n  }\r\n\r\n  takeDamage(dmg: number) {\r\n    this.hp = Math.max(0, this.hp - dmg);\r\n    if (this.hp <= 0) {\r\n      this.die();\r\n    }\r\n\r\n    this.onChange();\r\n  }\r\n\r\n  onChange() {\r\n    this.terrain.animate({ char: this });\r\n  }\r\n\r\n  async shoot(tcell: Cell) {\r\n    if (!tcell) return false;\r\n    let target = tcell.unit;\r\n    if (!target) return false;\r\n\r\n    let chance = this.hitChance(tcell);\r\n    if (chance == 0) return false;\r\n\r\n    let success = this.terrain.rni() % 100 < chance;\r\n\r\n    this.ap = 0;\r\n    let dmg = 0;\r\n    if (success) {\r\n      dmg = this.gun.damageRoll(this, target.cell, this.terrain.rnf);\r\n    }\r\n\r\n    await this.animateShoot(target.cid, dmg);\r\n\r\n    target.takeDamage(dmg);\r\n    if (target.hp <= 0) this.team.calculate();\r\n\r\n    let dir = v2.norm(v2.sub(tcell.at, this.at));\r\n    this.focusAccuracyBonus(tcell.at)\r\n    this.focus = v2.scale(dir, Math.min(this.gun.maxFocus, 10 + this.focusAccuracyBonus(tcell.at)));\r\n    this.velocity = [0, 0];\r\n\r\n    return true;\r\n  }\r\n\r\n  teleport(to: Cell) {\r\n    if (this.cell) {\r\n      if (this.cell == to) return;\r\n      delete this.cell.unit;\r\n    }\r\n\r\n    to.unit = this;\r\n    this.cell = to;\r\n\r\n    this.calculate();\r\n  }\r\n\r\n  calculateReactionFire(path: V2[]) {\r\n    let enemies = this.team.enemy.units;\r\n    let rfPoints = [] as { moment: number; enemy: Unit }[];\r\n    for (let enemy of enemies) {\r\n      if (enemy.ap == 0) continue;\r\n      let bestMoment = max(\r\n        path,\r\n        step => !step.unit && enemy.averageDamage(step, this, true)\r\n      );\r\n      if (bestMoment && bestMoment.val >= 1) {\r\n        rfPoints.push({ moment: bestMoment.ind, enemy });\r\n      }\r\n    }\r\n\r\n    rfPoints = rfPoints.sort((a, b) => (a.moment > b.moment ? 1 : -1));\r\n\r\n    return rfPoints;\r\n  }\r\n\r\n  calculateVelocity(path: Cell[]) {\r\n    let delta = v2.sub(path[path.length - 1].at, path[0].at);\r\n    return v2.round(v2.norm(delta, this.speed));\r\n  }\r\n\r\n  async move(to: Cell) {\r\n    if (to == this.cell || !to) return false;\r\n    this.ap -= this.apCost(to);\r\n\r\n    let path = this.pathTo(to);\r\n\r\n    this.velocity = this.calculateVelocity(path);\r\n    this.focus = v2.norm(this.velocity, 10)\r\n\r\n    let enemies = this.team.enemy.units;\r\n    let rfPoints = [] as { moment: number; enemy: Unit }[];\r\n    for (let enemy of enemies) {\r\n      if (enemy.ap == 0) continue;\r\n      let bestMoment = max(\r\n        path,\r\n        step => !step.unit && enemy.averageDamage(step, this, true)\r\n      );\r\n      if (bestMoment && bestMoment.val >= 1) {\r\n        rfPoints.push({ moment: bestMoment.ind, enemy });\r\n      }\r\n    }\r\n\r\n    rfPoints = rfPoints.sort((a, b) => (a.moment > b.moment ? 1 : -1));\r\n\r\n    for (let owPoint of rfPoints) {\r\n      let place = path[owPoint.moment];\r\n      await this.animateWalk(this.pathTo(place));\r\n      this.teleport(place);\r\n      await owPoint.enemy.shoot(place);\r\n      if (!this.alive) return true;\r\n    }\r\n\r\n    await this.animateWalk(this.pathTo(to));\r\n    this.teleport(to);\r\n\r\n    if (this.cell.items.length > 0) {\r\n      this.hp = this.maxHP;\r\n      this.cell.items = [];\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  async animateWalk(path: Cell[]) {\r\n    if (path.length <= 1) return;\r\n    await this.terrain.animate({ anim: \"walk\", char: this, path });\r\n  }\r\n\r\n  async animateShoot(tcid: number, damage: number) {\r\n    await this.terrain.animate({\r\n      anim: \"shoot\",\r\n      from: this.cid,\r\n      to: tcid,\r\n      damage\r\n    });\r\n  }\r\n\r\n  canDamage(target: Unit) {\r\n    return (\r\n      target &&\r\n      this.team != target.team &&\r\n      this.cell.xfov.has(target.cid) &&\r\n      this.canShoot()\r\n    );\r\n  }\r\n\r\n  bestPosition(): Cell {\r\n    let team = this.team;\r\n    this.calculate();\r\n    let bestScore = -100;\r\n    let bestAt: number;\r\n    for (let i in this.dists) {\r\n      let d = this.dists[i][0];\r\n      if (d > this.speed * this.ap) continue;\r\n      let score =\r\n        team.strength[i] -\r\n        team.weakness[i] -\r\n        idiv(d, this.speed) * 0.5 -\r\n        d * 0.001;\r\n      score += team.distance[i] * this.aggression;\r\n\r\n      if (score > bestScore) {\r\n        bestScore = score;\r\n        bestAt = Number(i);\r\n      }\r\n    }\r\n    return this.terrain.cells[bestAt];\r\n  }\r\n\r\n  averageDamage(tcell: Cell, tunit?:Unit, direct = false) {\r\n    let hitChance = this.hitChance(tcell, tunit, direct);\r\n    return (hitChance * this.gun.averageDamage(this,tcell)) / 100;\r\n  }\r\n\r\n  bestTarget() {\r\n    let bestScore = -100;\r\n    let bestAt: Cell = null;\r\n    for (let tchar of this.terrain.units) {\r\n      if (tchar.team == this.team || tchar.hp <= 0) continue;\r\n      let score = this.averageDamage(tchar.cell);\r\n      if (score > bestScore) {\r\n        bestScore = score;\r\n        bestAt = tchar.cell;\r\n      }\r\n    }\r\n    return bestAt;\r\n  }\r\n\r\n  async think() {\r\n    await this.move(this.bestPosition());\r\n    if (this.ap > 0) {\r\n      await this.shoot(this.bestTarget());\r\n    }\r\n  }\r\n\r\n  dist(other: Unit | Cell) {\r\n    return v2.dist(this.at, other.at);\r\n  }\r\n\r\n  get alive() {\r\n    return this.hp > 0;\r\n  }\r\n\r\n  friendly(other: Unit) {\r\n    return other && this.team == other.team;\r\n  }\r\n\r\n  get moving() {\r\n    return v2.length(this.velocity) > 0;\r\n  }\r\n\r\n  get focused() {\r\n    return v2.length(this.focus) > 0;\r\n  }\r\n}\r\n", "import Unit from \"./Unit\";\r\nimport Cell from \"./Cell\";\r\n\r\nexport default class Gun {\r\n  damageOptimalRange = [1, 20];\r\n  damage = [4, 5];\r\n  damagePenaltyPerCell = 100;\r\n  accuracyPenaltyMax = 20;\r\n\r\n  accuracy = 60;\r\n  accuracyOptimalRange = [1, 1];\r\n  accuracyPenaltyPerCell = 1;\r\n\r\n  damagePenaltyMax = 2;  \r\n\r\n  breach = 0;\r\n\r\n  maxFocus = 30;\r\n\r\n  name = \"Gun\";\r\n\r\n  constructor(o?: any) {\r\n    if (o) Object.assign(this, o);\r\n  }\r\n\r\n  damagePenalty(dist: number) {\r\n    let diff = 0;\r\n    if (dist < this.damageOptimalRange[0]) {\r\n      diff = this.damageOptimalRange[0] - dist;\r\n    }\r\n    if (dist > this.damageOptimalRange[1]) {\r\n      diff = dist - this.damageOptimalRange[1];\r\n    }\r\n    return Math.floor(Math.min(this.damagePenaltyMax, this.damagePenaltyPerCell * diff));\r\n  }\r\n\r\n  accuracyPenalty(dist: number) {\r\n    let diff = 0;\r\n    if (dist < this.accuracyOptimalRange[0]) {\r\n      diff = this.accuracyOptimalRange[0] - dist;\r\n    }\r\n    if (dist > this.accuracyOptimalRange[1]) {\r\n      diff = dist - this.accuracyOptimalRange[1];\r\n    }\r\n    return Math.floor(Math.min(this.accuracyPenaltyMax, this.accuracyPenaltyPerCell * diff));\r\n  }\r\n\r\n  averageDamage(by: Unit, tcell: Cell, tunit?:Unit) {\r\n    if(!tunit)\r\n      tunit = tcell.unit;\r\n\r\n    let dmg = (this.damage[1] + this.damage[0]) * 0.5;\r\n    if(tunit)\r\n      dmg -= Math.max(0, tcell.unit.armor - this.breach);\r\n    dmg -= this.damagePenalty(by.dist(tcell));    \r\n    return Math.max(0, Math.round(dmg * 10) / 10);\r\n  }\r\n\r\n  damageRoll(by: Unit, tcell: Cell, rnf: () => number) {\r\n    let dmg = rnf() * (this.damage[1] - this.damage[0]) + this.damage[0];\r\n    if(tcell.unit)\r\n      dmg -= Math.max(0, tcell.unit.armor - this.breach);\r\n    dmg -= this.damagePenalty(by.dist(tcell));\r\n    return Math.max(0, Math.round(dmg));\r\n  }\r\n}\r\n", "import { idiv, random } from \"./Util\";\r\nimport Cell from \"./Cell\";\r\nimport Unit from \"./Unit\";\r\nimport * as v2 from \"./v2\";\r\nimport shadowcast from \"./sym-shadowcast\";\r\nimport Team from \"./Team\";\r\nimport Gun from \"./Gun\";\r\nimport { StageConf, CampaignConf, StateConf } from \"./Campaigns\";\r\nimport Item from \"./Item\";\r\n\r\ntype V2 = [number, number];\r\nconst sightRange = 20;\r\n\r\nexport default class Terrain {\r\n  static readonly dirs8: V2[] = [\r\n    [0, -1],\r\n    [1, -1],\r\n    [1, 0],\r\n    [1, 1],\r\n    [0, 1],\r\n    [-1, 1],\r\n    [-1, 0],\r\n    [-1, -1]\r\n  ];\r\n\r\n  cells: Cell[];\r\n  w: number;\r\n  h: number;\r\n  aiTurn: boolean = false;\r\n\r\n  dir8Deltas: number[];\r\n\r\n  units: Unit[];\r\n  teams: Team[];\r\n\r\n  victor: Team;\r\n\r\n  terrainString: string;\r\n\r\n  rni = random(1);\r\n\r\n  activeTeam: Team;\r\n\r\n  rnf = () => (this.rni() % 1e9) / 1e9;\r\n\r\n  serialize() {\r\n    return {\r\n      teams: this.teams.map(t => t.serialize()),\r\n      cells: this.cells.filter(c => c.serializable()).map(o => o.serialize()),\r\n      activeTeam: this.activeTeam.faction\r\n    };\r\n  }\r\n\r\n  init(terrainString: string) {\r\n    this.terrainString = terrainString;\r\n\r\n    let lines = terrainString\r\n      .split(\"\\n\")\r\n      .map(s => s.trim())\r\n      .filter(s => s.length > 0);\r\n\r\n    this.h = lines.length;\r\n    this.w = Math.max(...lines.map(s => s.length));\r\n\r\n    this.cells = [];\r\n    this.units = [];\r\n    this.teams = [];\r\n\r\n    delete this.victor;\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n      let team = new Team(this, i);\r\n      this.teams[i] = team;\r\n    }\r\n\r\n    for (let y = 0; y < this.h; y++) {\r\n      let line = lines[y];\r\n      for (let x = 0; x < this.w; x++) {\r\n        let cid = x + y * this.w;\r\n        let symbol = line[x] || \" \";\r\n        let cell = new Cell(this, cid, [\"+\", \"#\"].indexOf(symbol) + 1);\r\n        if (this.campaign.units[symbol.toLowerCase()])\r\n          new Unit(cell, { symbol, cid });\r\n        if (symbol == \"*\") cell.addItem(new Item(Item.MEDKIT));\r\n        if (symbol == \"~\") cell.hole = true;\r\n        this.cells[cid] = cell;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.w; i++) {\r\n      this.seal(i, 0);\r\n      this.seal(i, this.h - 1);\r\n    }\r\n\r\n    for (let i = 0; i < this.h; i++) {\r\n      this.seal(0, i);\r\n      this.seal(this.w - 1, i);\r\n    }\r\n\r\n    this.dir8Deltas = Terrain.dirs8.map(v => v[0] + v[1] * this.w);\r\n\r\n    for (let c of this.cells) {\r\n      if (!c.obstacle) c.calculatePovAndCover();\r\n    }\r\n\r\n    console.log(this.w);\r\n    console.log(this.h);\r\n    console.time(\"FOV\");\r\n\r\n    for (let c of this.cells) {\r\n      if (!c.obstacle) {\r\n        c.calculatePovAndCover();\r\n        c.calculateFov();\r\n      }\r\n    }\r\n\r\n    console.timeEnd(\"FOV\");\r\n\r\n    for (let c of this.cells) {\r\n      if (!c.obstacle) {\r\n        c.calculateXFov();\r\n        c.calculateDFov();\r\n      }\r\n    }\r\n\r\n    this.activeTeam = this.teams[0];\r\n\r\n    console.log(this);\r\n  }\r\n\r\n  seal(x: number, y: number) {\r\n    this.cells[this.cid(x, y)].seal();\r\n  }\r\n\r\n  constructor(\r\n    public campaign: CampaignConf,\r\n    public stage: StageConf,\r\n    state: any,\r\n    public animate: (any) => Promise<void>\r\n  ) {\r\n    for (let gunId in campaign.guns) {\r\n      campaign.guns[gunId] = new Gun(campaign.guns[gunId]);\r\n    }\r\n    this.init(this.stage.terrain);\r\n\r\n    if (state) this.loadState(state);\r\n  }\r\n\r\n  loadState(state: StateConf) {\r\n    if (!state || !state.teams) return;\r\n\r\n    this.units = [];\r\n    this.cells.forEach(c => {\r\n      delete c.unit;\r\n      c.items = [];\r\n    });\r\n\r\n    this.teams = state.teams.map((t, i) => {\r\n      let team = new Team(this, i);\r\n      for (let u of t.units) {\r\n        let unit = new Unit(this.cells[u.cid], u);\r\n        unit.team = team;\r\n      }\r\n      return team;\r\n    });\r\n\r\n    this.activeTeam = this.teams[state.activeTeam];\r\n  }\r\n\r\n  calcDists(fromi: number) {\r\n    let dists = this.cells.map(_ => [Number.MAX_VALUE, -1]);\r\n    dists[fromi] = [0, -1];\r\n    let todo: number[] = [fromi];\r\n\r\n    let char = this.cells[fromi].unit;\r\n\r\n    while (todo.length > 0) {\r\n      let curi = todo.shift();\r\n      let curl = dists[curi][0];\r\n      let curc = this.cells[curi];\r\n\r\n      for (let dir = 0; dir < 8; dir++) {\r\n        let diagonal = dir % 2;\r\n        let nexti = this.dir8Deltas[dir] + curi;\r\n        let nextc = this.cells[nexti];\r\n\r\n        if (!nextc.passable || (nextc.unit && !nextc.unit.friendly(char)))\r\n          continue;\r\n\r\n        if (\r\n          diagonal &&\r\n          (this.cells[curi + this.dir8Deltas[(dir + 1) % 8]].obstacle ||\r\n            this.cells[curi + this.dir8Deltas[(dir + 7) % 8]].obstacle)\r\n        )\r\n          continue;\r\n\r\n        let obstacleness =\r\n          nextc.obstacle +\r\n          curc.obstacle +\r\n          (curc.unit ? 1 : 0) +\r\n          (nextc.unit ? 1 : 0);\r\n        if (obstacleness > 1 && (diagonal && obstacleness > 0)) continue;\r\n\r\n        let next = dists[nexti];\r\n        let plusl = obstacleness + (diagonal ? 1.414 : 1);\r\n        if (next[0] > curl + plusl) {\r\n          dists[nexti] = [curl + plusl, curi];\r\n          todo.push(nexti);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < dists.length; i++) {\r\n      if (!this.cells[i].standable) dists[i][0] = Number.MAX_VALUE;\r\n    }\r\n    return dists;\r\n  }\r\n\r\n  /** cell id within map bounds */\r\n  safeCid(x: number, y: number) {\r\n    if (x >= 0 && y >= 0 && x < this.w && y < this.h) return this.cid(x, y);\r\n  }\r\n\r\n  /** cell id (position in array) */\r\n  cid(x: number, y: number) {\r\n    return x + y * this.w;\r\n  }\r\n\r\n  cellAt(x: number, y: number): Cell {\r\n    return this.cells[this.cid(x, y)];\r\n  }\r\n\r\n  /** [x,y] for given cid */\r\n  fromCid(ind: number): V2 {\r\n    return [ind % this.w, idiv(ind, this.w)];\r\n  }\r\n\r\n  calculateFov(cid: number) {\r\n    let [x, y] = this.fromCid(cid);\r\n    let visibility = new Set<number>();\r\n    shadowcast(\r\n      x,\r\n      y,\r\n      (x, y) => !this.cellAt(x, y).opaque,\r\n      (x, y) => {\r\n        for (let pov of this.cells[this.cid(x, y)].peeked)\r\n          visibility.add(pov.cid);\r\n      }\r\n    );\r\n    return visibility;\r\n  }\r\n\r\n  calculateDirectFov(cid: number) {\r\n    let [x, y] = this.fromCid(cid);\r\n    let visibility = new Set<number>();\r\n    shadowcast(\r\n      x,\r\n      y,\r\n      (x, y) => !this.cellAt(x, y).opaque,\r\n      (x, y) => {\r\n        visibility.add(this.cid(x, y));\r\n      }\r\n    );\r\n    return visibility;\r\n  }\r\n\r\n  obstacles(cid: number) {\r\n    let obstacles: number[] = [];\r\n    for (let dir = 0; dir < 8; dir += 2) {\r\n      let forward = cid + this.dir8Deltas[dir];\r\n      obstacles.push(this.cells[forward].obstacle);\r\n    }\r\n    return obstacles;\r\n  }\r\n\r\n  cover(from: Cell, target: Cell) {\r\n    let visible = from.xfov.has(target.cid);\r\n\r\n    if (!visible) return -1;\r\n\r\n    let worstCover = 2;\r\n\r\n    for (let pov of from.povs) {\r\n      let bestCover = 0;\r\n      let delta = v2.sub(target.at, pov.at);\r\n\r\n      for (let i = 0; i < 4; i++) {\r\n        let cover = target.cover[i];\r\n        if (cover <= bestCover) continue;\r\n        let dot = v2.dot(Terrain.dirs8[i * 2], delta);\r\n        if (dot < -0.001) bestCover = cover;\r\n      }\r\n\r\n      if (bestCover < worstCover) worstCover = bestCover;\r\n    }\r\n\r\n    return worstCover;\r\n  }\r\n\r\n  declareVictory(team: Team) {\r\n    this.victor = team;\r\n  }\r\n\r\n  get we() {\r\n    return this.teams[Team.BLUE];\r\n  }\r\n\r\n  endSideTurn() {\r\n    this.activeTeam.endTurn();\r\n\r\n    this.teams[(this.activeTeam.faction + 1) % this.teams.length].beginTurn();\r\n  }\r\n}\r\n", "import Game from \"./Game\";\r\n\r\nimport { V2 } from \"./v2\";\r\nimport * as v2 from \"./v2\";\r\nimport { Context2d } from \"./Util\";\r\nimport Anim from \"./Anim\";\r\n\r\nexport default class MovingText implements Anim {\r\n  time = 0;\r\n  constructor(\r\n    public text: string,\r\n    public color: string,\r\n    public lifeTime: number,\r\n    public at: V2,\r\n    public vel: V2 = [0, 0]\r\n  ) {\r\n  }\r\n\r\n  update(dTime: number) {\r\n    this.time += dTime;\r\n    this.at = v2.sum(this.at, this.vel, dTime);\r\n    return this.time < this.lifeTime;\r\n  }\r\n\r\n  render(ctx: Context2d) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.shadowColor = `black`;\r\n    ctx.shadowBlur = 1;\r\n    ctx.shadowOffsetX = 1;\r\n    ctx.shadowOffsetY = 1;\r\n    ctx.font = `12pt \"Courier\"`;\r\n    ctx.textAlign = \"center\";\r\n    let y = 0;\r\n    let l = 0;\r\n    for (let line of this.text.split(\"|\")) {\r\n      ctx.fillText(\r\n        line.trim().substr(0, Math.floor(this.time * 70) - l),\r\n        this.at[0],\r\n        this.at[1] + y\r\n      );\r\n      l += line.length;\r\n      y += 20;\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\n", "export let version = \"0.2\"\r\nexport let insideBorder = 0;\r\n\r\n\r\n  ", "import Terrain from \"./Terrain\";\r\nimport { Context2d, idiv, createCanvas, canvasCache, Canvas2d } from \"./Util\";\r\nimport Unit from \"./Unit\";\r\nimport Cell from \"./Cell\";\r\nimport MovingText from \"./MovingText\";\r\nimport Anim from \"./Anim\";\r\n\r\nimport * as v2 from \"./v2\";\r\nimport { V2 } from \"./v2\";\r\nimport Game from \"./Game\";\r\nimport Team from \"./Team\";\r\nimport { insideBorder } from \"./settings\";\r\n\r\nconst renderPovs = true;\r\nconst renderThreats = false;\r\nconst dashInterval = 4;\r\n\r\nclass Doll {\r\n  at: V2;\r\n  constructor(public unit: Unit, renderer: RenderSchematic) {\r\n    this.at = renderer.cidToPoint(unit.cid);\r\n  }\r\n}\r\n\r\nexport default class RenderSchematic {\r\n  canvasCacheOutdated = false;\r\n  canvasCache: Canvas2d;\r\n  canvasTerrain: Canvas2d;\r\n\r\n  width: number;\r\n  height: number;\r\n\r\n  anim: Anim[] = [];\r\n\r\n  animQueue: Anim[] = [];\r\n\r\n  dolls: Doll[] = [];\r\n\r\n  tileSize = 32;\r\n\r\n  screenPos = [0, 0] as V2;\r\n\r\n  lookingAt: V2;\r\n\r\n  get canvas() {\r\n    return this.game.canvas;\r\n  }\r\n\r\n  synch() {\r\n    this.dolls = this.terrain.units.map(unit => new Doll(unit, this));\r\n    this.updateCanvasCache();\r\n  }\r\n\r\n  get terrain() {\r\n    return this.game.terrain;\r\n  }\r\n\r\n  constructor(public game: Game) {\r\n    this.initSprites();\r\n  }\r\n\r\n  resize() {\r\n    if (!this.canvas) return;\r\n\r\n    this.canvas.width = this.canvas.clientWidth;\r\n    this.canvas.height = this.canvas.clientHeight;\r\n\r\n    this.width = this.canvas.clientWidth;\r\n    this.height = this.canvas.clientHeight;\r\n\r\n    if (this.terrain)\r\n      this.screenPos = [\r\n        0.5 * (this.width - this.terrain.w * this.tileSize),\r\n        0.5 * (this.height - this.terrain.h * this.tileSize)\r\n      ];\r\n\r\n    this.canvas.getContext(\"2d\").imageSmoothingEnabled = false;\r\n  }\r\n\r\n  update(dTime: number) {\r\n    let d = this.lookingAt ? v2.dist(this.lookingAt, this.screenPos) : 0;\r\n    if (this.lookingAt && d > 20) {\r\n      this.screenPos = v2.lerp(\r\n        this.screenPos,\r\n        this.lookingAt,\r\n        Math.min(1, dTime * Math.max(d / 50, 10) * this.animSpeed)\r\n      );\r\n    } else {\r\n      delete this.lookingAt;\r\n\r\n      let anims = this.anim;\r\n      this.anim = [];\r\n\r\n      anims = anims.filter(fx => {\r\n        return fx.update(dTime);\r\n      });\r\n\r\n      this.anim = this.anim.concat(anims);\r\n\r\n      if (this.animQueue.length > 0 && !this.animQueue[0].update(dTime))\r\n        this.animQueue.shift();\r\n\r\n      if (this.animQueue.length == 0 && this.blockingAnimationEnd) {\r\n        this.blockingAnimationEnd();\r\n        delete this.blockingAnimationEnd;\r\n      }\r\n    }\r\n\r\n    this.dolls = this.dolls.filter(d => d.unit.alive);\r\n  }\r\n\r\n  render(ctx: Context2d): boolean {\r\n    if (!ctx) return;\r\n\r\n    ctx.clearRect(0, 0, this.width, this.height);\r\n\r\n    let t = this.terrain;\r\n\r\n    ctx.save();\r\n\r\n    ctx.translate(...this.screenPos);\r\n\r\n    if (!this.canvasCache || this.canvasCacheOutdated) this.updateCanvasCache();\r\n    ctx.clearRect(0, 0, t.w * this.tileSize, t.h * this.tileSize);\r\n\r\n    ctx.drawImage(this.canvasCache, 0, 0);\r\n\r\n    for (let d of this.dolls) {\r\n      this.renderDoll(ctx, d);\r\n    }\r\n\r\n    for (let fx of this.anim) if (fx.render) fx.render(ctx);\r\n\r\n    if (this.animQueue.length > 0 && this.animQueue[0].render)\r\n      this.animQueue[0].render(ctx);\r\n\r\n    if (!this.busy) this.renderPath(ctx, this.game.hovered);\r\n\r\n    ctx.restore();\r\n\r\n    return this.animQueue.length > 0;\r\n  }\r\n\r\n  renderPath(ctx: Context2d, cell: Cell) {\r\n    let unit = this.game.chosen;\r\n\r\n    if (\r\n      !unit ||\r\n      !cell ||\r\n      !unit.dists ||\r\n      !unit.dists[cell.cid] ||\r\n      unit.dists[cell.cid][1] == -1\r\n    )\r\n      return;\r\n\r\n    if (!unit.reachable(cell)) return;\r\n\r\n    let end = this.cidToCenterPoint(cell.cid);\r\n\r\n    ctx.beginPath();\r\n    if (unit.reachable(cell))\r\n      ctx.arc(end[0], end[1], this.tileSize / 4, 0, Math.PI * 2);\r\n    else {\r\n      ctx.moveTo(end[0] - this.tileSize / 4, end[1] - this.tileSize / 4);\r\n      ctx.lineTo(end[0] + this.tileSize / 4, end[1] + this.tileSize / 4);\r\n      ctx.stroke();\r\n      ctx.beginPath();\r\n      ctx.moveTo(end[0] - this.tileSize / 4, end[1] + this.tileSize / 4);\r\n      ctx.lineTo(end[0] + this.tileSize / 4, end[1] - this.tileSize / 4);\r\n    }\r\n    ctx.stroke();\r\n\r\n    let path = unit.pathTo(cell);\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(...this.cidToCenterPoint(path[0].cid));\r\n    for (let i of path) ctx.lineTo(...this.cidToCenterPoint(i.cid));\r\n    ctx.stroke();\r\n  }\r\n\r\n  renderThreats(ctx: Context2d, cell: Cell) {\r\n    let t = this.terrain;\r\n    let i = cell.cid;\r\n\r\n    if (!t.teams[Team.RED].strength) return;\r\n\r\n    ctx.strokeStyle = \"#800\";\r\n    ctx.lineWidth = t.teams[Team.RED].strength[i] == 4 ? 3 : 1;\r\n    ctx.beginPath();\r\n    ctx.moveTo(3.5, 3.5);\r\n    ctx.lineTo(3.5, 3.5 + 3 * t.teams[Team.RED].strength[i]);\r\n    ctx.stroke();\r\n\r\n    ctx.strokeStyle = \"#008\";\r\n    ctx.lineWidth = t.teams[Team.RED].weakness[i] == 4 ? 3 : 1;\r\n    ctx.beginPath();\r\n    ctx.moveTo(3.5, 3.5);\r\n    ctx.lineTo(3.5 + 3 * t.teams[Team.RED].weakness[i], 3.5);\r\n    ctx.stroke();\r\n  }\r\n\r\n  renderCell(ctx: Context2d, cell: Cell) {\r\n    let at = this.cidToPoint(cell.cid);\r\n\r\n    let sprite = [, this.lowTile, this.highTile][cell.obstacle];\r\n\r\n    if (cell.hole) {\r\n      sprite = this.waterTile;\r\n    }\r\n\r\n    if (sprite) ctx.drawImage(sprite, at[0], at[1]);\r\n\r\n    if (cell.items.length > 0) {\r\n      ctx.translate(...at);\r\n      ctx.fillStyle = \"#080\";\r\n      ctx.fillRect(this.tileSize * 0.35, 0, this.tileSize * 0.3, this.tileSize);\r\n      ctx.fillRect(0, this.tileSize * 0.35, this.tileSize, this.tileSize * 0.3);\r\n      ctx.translate(...v2.scale(at, -1));\r\n    }\r\n  }\r\n\r\n  renderCellUI(ctx: Context2d, cell: Cell) {\r\n    let at = this.cidToPoint(cell.cid);\r\n    let g = this.game;\r\n\r\n    ctx.strokeStyle = \"#000\";\r\n    ctx.lineWidth = 2;\r\n\r\n    if (g.hovered && !g.hovered.opaque) {\r\n      let xfov = g.hovered.xfov.has(cell.cid);\r\n      let dfov = g.hovered.rfov.has(cell.cid);\r\n      if (!dfov) {\r\n        ctx.fillStyle = `rgba(${xfov ? \"50,50,0,0.04\" : \"0,0,50,0.1\"})`;\r\n        ctx.fillRect(at[0], at[1], this.tileSize, this.tileSize);\r\n      }\r\n\r\n      if (renderThreats) this.renderThreats(ctx, cell);\r\n    }\r\n\r\n    if (g.chosen && g.chosen.dists && !this.busy) {\r\n      let moves = g.chosen.apCost(cell);\r\n      if (moves > 0 && moves <= g.chosen.ap) {\r\n        let img = [, this.ap1Sprite, this.ap2Sprite][Math.floor(moves)];\r\n        if (img) ctx.drawImage(img, at[0], at[1]);\r\n      }\r\n    }\r\n\r\n    if (renderPovs && cell.povs && cell.peeked.includes(this.game.hovered)) {\r\n      ctx.strokeStyle = `rgba(0,0,0,0.5)`;\r\n      ctx.lineWidth = 0.5;\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        at[0] + this.tileSize / 2,\r\n        at[1] + this.tileSize / 2,\r\n        this.tileSize / 4,\r\n        0,\r\n        Math.PI * 2\r\n      );\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  renderDoll(ctx: Context2d, doll: Doll) {\r\n    ctx.save();\r\n\r\n    ctx.translate(...doll.at);\r\n\r\n    this.useDollCache(ctx, doll);\r\n\r\n    if (doll.unit == this.game.chosen) {\r\n      this.outline(ctx, doll, Math.sin(new Date().getTime() / 100) + 1);\r\n    } else if (doll.unit == this.game.hoveredChar) {\r\n      this.outline(ctx, doll, 1.5);\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  outline(ctx: Context2d, doll: Doll, width = 2) {\r\n    ctx.save();\r\n    ctx.strokeStyle = doll.unit.strokeColor;\r\n    ctx.lineWidth = width;\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.tileSize / 2,\r\n      this.tileSize / 2,\r\n      this.tileSize * 0.4,\r\n      0,\r\n      Math.PI * 2\r\n    );\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  dollCache: { [key: string]: Canvas2d } = {};\r\n\r\n  useDollCache(ctx: Context2d, doll: Doll) {\r\n    let unit = doll.unit;\r\n    let state = [\"cid\", \"hp\", \"ap\", \"kind\", \"faction\", \"focus\", \"velocity\"].map(\r\n      key => unit[key]\r\n    );\r\n    state.push(this.dollTint(doll));\r\n    let key = JSON.stringify(state);\r\n    if (!(key in this.dollCache))\r\n      this.dollCache[key] = canvasCache(\r\n        [this.tileSize * 2, this.tileSize * 2],\r\n        ctx => this.renderDollBody(ctx, doll, this.dollTint(doll))\r\n      );\r\n    ctx.drawImage(\r\n      this.dollCache[key],\r\n      -0.5 * this.tileSize,\r\n      -0.5 * this.tileSize\r\n    );\r\n  }\r\n\r\n  dollTint(doll: Doll) {\r\n    if (this.busy || this.terrain.aiTurn) return 0;\r\n    let unit = doll.unit;\r\n    let flankNum = 0;\r\n    let hover = this.game.hovered;\r\n    if (hover && !hover.opaque && hover.xfov) {\r\n      let visible =\r\n        hover.xfov.has(unit.cid) || unit.team == this.game.lastSelectedFaction;\r\n      if (visible)\r\n        flankNum =\r\n          (this.terrain.cover(unit.cell, hover) == 0 ? 1 : 0) +\r\n          (this.terrain.cover(hover, unit.cell) == 0 ? 2 : 0);\r\n      else flankNum = 4;\r\n    }\r\n    if (!this.game.hovered) flankNum = 0;\r\n\r\n    return flankNum;\r\n  }\r\n\r\n  renderDollBody(ctx: Context2d, doll: Doll, tint: number) {\r\n    let unit = doll.unit;\r\n\r\n    ctx.fillStyle = [\"#fff\", \"#fba\", \"#cfa\", \"#ffa\", \"#ccc\"][tint];\r\n    ctx.strokeStyle = unit.strokeColor;\r\n\r\n    ctx.scale(this.tileSize, this.tileSize);\r\n    ctx.translate(0.5, 0.5);\r\n\r\n    ctx.shadowColor = \"#444\";\r\n    ctx.shadowOffsetX = 1;\r\n    ctx.shadowOffsetY = 1;\r\n    ctx.shadowBlur = 4;\r\n    ctx.beginPath();\r\n    ctx.arc(0.5, 0.5, 0.4, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.shadowColor = `rgba(0,0,0,0)`;\r\n\r\n    /*ctx.lineWidth = 0.05;\r\n    \r\n    for (let i = 0; i < unit.hp; i++) {\r\n      let angle = Math.PI * (1 - i / (unit.maxHP - 1));\r\n      let v = v2.fromAngle(angle);\r\n      ctx.beginPath();\r\n      ctx.moveTo(\r\n        (0.5 + v[0] * 0.3),\r\n        (0.5 + v[1] * 0.3)\r\n      );\r\n      ctx.lineTo(\r\n        (0.5 + v[0] * 0.4),\r\n        (0.5 + v[1] * 0.4)\r\n      );\r\n      ctx.stroke();\r\n    }*/\r\n\r\n    ctx.lineWidth = 0.1;\r\n\r\n    if (unit.ap > 0) {\r\n      ctx.fillStyle = doll.unit.strokeColor;\r\n      ctx.beginPath();\r\n      ctx.arc(0.2, 0.4, 0.07, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      if (unit.ap > 1) {\r\n        ctx.beginPath();\r\n        ctx.arc(0.8, 0.4, 0.07, 0, Math.PI * 2);\r\n        ctx.fill();\r\n      }\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.fillStyle = unit.strokeColor;\r\n    ctx.font = `bold 0.5pt Courier`;\r\n    ctx.fillText(unit.symbol.toUpperCase(), 0.29, 0.66);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    if (unit.focused) {\r\n      ctx.save();\r\n      ctx.translate(0.5, 0.5);\r\n      let angle = Math.atan2(unit.focus[1], unit.focus[0]);\r\n      ctx.rotate(angle);\r\n      ctx.lineWidth = 0.003 * v2.length(unit.focus);\r\n      ctx.beginPath();\r\n      ctx.moveTo(0.45, -0.15);\r\n      ctx.lineTo(0.6, 0);\r\n      ctx.lineTo(0.45, 0.15);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n\r\n    if (unit.moving) {\r\n      ctx.save();\r\n      ctx.translate(0.5, 0.5);\r\n      let angle = Math.atan2(unit.velocity[1], unit.velocity[0]);\r\n      ctx.rotate(angle);\r\n      ctx.lineWidth = 0.01 + 0.01 * v2.length(unit.velocity);\r\n      ctx.beginPath();\r\n      ctx.moveTo(-0.6, -0.15);\r\n      ctx.lineTo(-0.45, 0);\r\n      ctx.lineTo(-0.6, 0.15);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.lineWidth = 0.05;\r\n    ctx.transform(-1, 0, 0, 1, 1, 0);\r\n    ctx.setLineDash([6 / unit.maxHP - 0.05, 0.05]);\r\n    ctx.beginPath();\r\n    ctx.arc(0.5, 0.5, 0.35, 0, (Math.PI * unit.hp) / unit.maxHP);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  cidToPoint(ind: number): V2 {\r\n    return this.terrain.fromCid(ind).map(a => a * this.tileSize) as V2;\r\n  }\r\n\r\n  cidToCenterPoint(ind: number): V2 {\r\n    return v2.scale(\r\n      v2.sum(this.terrain.fromCid(ind), [0.5, 0.5]),\r\n      this.tileSize\r\n    );\r\n  }\r\n\r\n  cidToCenterScreen(ind: number): V2 {\r\n    return v2.sum(this.cidToCenterPoint(ind), this.screenPos);\r\n  }\r\n\r\n  cidFromPoint(x: number, y: number) {\r\n    return this.terrain.safeCid(idiv(x, this.tileSize), idiv(y, this.tileSize));\r\n  }\r\n\r\n  cellAtScreenPos(x: number, y: number): Cell {\r\n    return this.terrain.cells[\r\n      this.cidFromPoint(...v2.sub([x, y], this.screenPos))\r\n    ];\r\n  }\r\n\r\n  get animSpeed() {\r\n    return 2;\r\n    //return this.terrain.aiTurn ? 0.5 : 0.5;\r\n  }\r\n\r\n  updateCanvasCache() {\r\n    if (!this.canvasCache)\r\n      this.canvasCache = createCanvas(\r\n        this.terrain.w * this.tileSize,\r\n        this.terrain.h * this.tileSize\r\n      );\r\n\r\n    if (!this.canvasTerrain)\r\n      this.canvasTerrain = createCanvas(\r\n        this.terrain.w * this.tileSize,\r\n        this.terrain.h * this.tileSize\r\n      );\r\n\r\n    let tctx = this.canvasTerrain.getContext(\"2d\");\r\n    tctx.clearRect(\r\n      0,\r\n      0,\r\n      this.terrain.w * this.tileSize,\r\n      this.terrain.h * this.tileSize\r\n    );\r\n    for (let i = 0; i < this.terrain.cells.length; i++) {\r\n      let cell = this.terrain.cells[i];\r\n      this.renderCell(tctx, cell);\r\n    }\r\n\r\n    let ctx = this.canvasCache.getContext(\"2d\");\r\n\r\n    ctx.clearRect(\r\n      0,\r\n      0,\r\n      this.terrain.w * this.tileSize,\r\n      this.terrain.h * this.tileSize\r\n    );\r\n\r\n    ctx.save();\r\n    ctx.shadowBlur = 4;\r\n    ctx.shadowOffsetX = 1;\r\n    ctx.shadowOffsetY = 1;\r\n    ctx.shadowColor = \"#444\";\r\n    ctx.drawImage(this.canvasTerrain, 0, 0);\r\n    ctx.restore();\r\n\r\n    for (let i = 0; i < this.terrain.cells.length; i++) {\r\n      let cell = this.terrain.cells[i];\r\n      this.renderCellUI(ctx, cell);\r\n    }\r\n\r\n    this.canvasCacheOutdated = false;\r\n  }\r\n\r\n  resetCanvasCache() {\r\n    this.canvasCacheOutdated = true;\r\n  }\r\n\r\n  text(from: V2, text: string) {\r\n    let at = v2.sum(from, [0, -10]);\r\n    this.anim.push(new MovingText(text, \"#f00\", 3, at, [0, -10]));\r\n  }\r\n\r\n  renderBullet(ctx: Context2d, [from, to]: V2[], time: number) {\r\n    ctx.beginPath();\r\n    let delta = v2.norm(v2.sub(to, from), -20);\r\n    let at = v2.lerp(from, to, time);\r\n    this.lookAt(at);\r\n    let tail = v2.sum(at, delta);\r\n    var grad = ctx.createLinearGradient(tail[0], tail[1], at[0], at[1]);\r\n    grad.addColorStop(0, `rgba(0,0,0,0)`);\r\n    grad.addColorStop(1, `rgba(0,0,0,1)`);\r\n\r\n    ctx.lineWidth = 4;\r\n    ctx.strokeStyle = grad;\r\n\r\n    ctx.moveTo(...tail);\r\n    ctx.lineTo(...at);\r\n    ctx.stroke();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = \"#000\";\r\n  }\r\n\r\n  insideScreen(at: V2) {\r\n    at = v2.sum(at, this.screenPos);\r\n    return (\r\n      at[0] >= insideBorder &&\r\n      at[1] >= insideBorder &&\r\n      at[0] <= this.width - insideBorder &&\r\n      at[1] <= this.height - insideBorder\r\n    );\r\n  }\r\n\r\n  lookAtCid(cid: number) {\r\n    this.lookAt(this.cidToCenterPoint(cid));\r\n  }\r\n\r\n  lookAt(at: V2) {\r\n    //console.log(at);\r\n    let newLookingA: V2 = [-at[0] + this.width / 2, -at[1] + this.height / 2];\r\n    if (v2.dist(this.screenPos, newLookingA) <= 20) {\r\n      this.screenPos = newLookingA;\r\n    }\r\n    if (!this.insideScreen(at)) this.lookingAt = newLookingA;\r\n  }\r\n\r\n  shoot(from: number, to: number, dmg: number) {\r\n    let tiles = [from, to].map(v => this.terrain.cells[v]);\r\n\r\n    let points: [V2, V2];\r\n    let shootPoint: V2;\r\n\r\n    let a: Cell, b: Cell;\r\n\r\n    completely: for (a of tiles[0].povs)\r\n      for (b of tiles[1].povs) {\r\n        if (a.rfov.has(b.cid)) {\r\n          points = [a, b].map(v => this.cidToCenterPoint(v.cid)) as [V2, V2];\r\n          break completely;\r\n        }\r\n      }\r\n\r\n    if (dmg > 0) {\r\n      shootPoint = points[1];\r\n    } else {\r\n      let dir = v2.norm(v2.sub(points[1], points[0]));\r\n      shootPoint = v2.sum(\r\n        v2.sum(points[1], v2.rot(dir)),\r\n        dir,\r\n        10 * this.tileSize\r\n      );\r\n    }\r\n\r\n    let fdoll = this.dollAt(from);\r\n    let tdoll = this.dollAt(to);\r\n\r\n    let time = 0;\r\n    if (a.cid == from && b.cid == to) {\r\n      time = 1;\r\n    }\r\n\r\n    this.animQueue.push({\r\n      update: dTime => {\r\n        if (time >= 1 && time <= 2) {\r\n          time +=\r\n            dTime *\r\n            Math.min(\r\n              10,\r\n              (1000 / v2.dist(points[0], shootPoint)) * this.animSpeed\r\n            );\r\n        } else {\r\n          let peek = (time < 1 ? time : 3 - time) * 0.6;\r\n          for (let i = 0; i < 2; i++) {\r\n            let doll = [fdoll, tdoll][i];\r\n            doll.at = v2.lerp(\r\n              this.cidToPoint([from, to][i]),\r\n              v2.sub(points[i], [this.tileSize / 2, this.tileSize / 2]),\r\n              peek\r\n            );\r\n          }\r\n          time += dTime * this.animSpeed * 10;\r\n        }\r\n\r\n        if (time > 3) {\r\n          this.text(points[1], dmg > 0 ? `-${dmg}` : \"MISS\");\r\n          fdoll.at = this.cidToPoint(fdoll.unit.cid);\r\n          tdoll.at = this.cidToPoint(tdoll.unit.cid);\r\n          return false;\r\n        }\r\n        return true;\r\n      },\r\n      render: (ctx: Context2d) => {\r\n        if (time > 1 && time < 2)\r\n          this.renderBullet(ctx, [points[0], shootPoint], time - 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  walk(doll: Doll, steps: Cell[]) {\r\n    let path = steps.map(v => this.cidToPoint(v.cid)) as [V2, V2];\r\n    let time = 0;\r\n    this.animQueue.push({\r\n      update: dTime => {\r\n        time += dTime * 15 * this.animSpeed;\r\n\r\n        if (!path[Math.floor(time) + 1]) {\r\n          doll.at = path[path.length - 1];\r\n          return false;\r\n        }\r\n\r\n        doll.at = v2.lerp(\r\n          path[Math.floor(time)],\r\n          path[Math.floor(time) + 1],\r\n          time - Math.floor(time)\r\n        );\r\n\r\n        this.lookAt(doll.at);\r\n\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  dollOf(unit: Unit) {\r\n    return this.dolls.find(d => d.unit == unit);\r\n  }\r\n\r\n  dollAt(cid: number) {\r\n    return this.dolls.find(d => d.unit.cid == cid);\r\n  }\r\n\r\n  async draw(o: any) {\r\n    switch (o.anim) {\r\n      case \"walk\":\r\n        this.walk(this.dollOf(o.char), o.path);\r\n        break;\r\n      case \"shoot\":\r\n        this.shoot(o.from, o.to, o.damage);\r\n        break;\r\n    }\r\n    await this.waitForAnim();\r\n  }\r\n\r\n  blockingAnimationEnd: Function;\r\n\r\n  waitForAnim() {\r\n    return new Promise<void>(resolve => {\r\n      this.blockingAnimationEnd = () => resolve();\r\n    });\r\n  }\r\n\r\n  get busy() {\r\n    return this.animQueue.length > 0;\r\n  }\r\n\r\n  ap1Sprite: Canvas2d;\r\n  ap2Sprite: Canvas2d;\r\n  hiddenSprite: Canvas2d;\r\n  dashPattern: Canvas2d;\r\n  wavePattern: Canvas2d;\r\n  crossPattern: Canvas2d;\r\n  highTile: Canvas2d;\r\n  lowTile: Canvas2d;\r\n  waterTile: Canvas2d;\r\n\r\n  initSprites() {\r\n    this.ap1Sprite = canvasCache([this.tileSize, this.tileSize], ctx => {\r\n      ctx.strokeStyle = \"#555\";\r\n      ctx.strokeRect(4.5, 4.5, this.tileSize - 8, this.tileSize - 8);\r\n    });\r\n\r\n    this.ap2Sprite = canvasCache([this.tileSize, this.tileSize], ctx => {\r\n      ctx.strokeStyle = \"#bbb\";\r\n      ctx.strokeRect(4.5, 4.5, this.tileSize - 8, this.tileSize - 8);\r\n    });\r\n\r\n    this.hiddenSprite = canvasCache([this.tileSize, this.tileSize], ctx => {\r\n      ctx.fillStyle = `rgba(0,0,0,0.12)`;\r\n      ctx.fillRect(0, 0, this.tileSize, this.tileSize);\r\n    });\r\n\r\n    this.dashPattern = canvasCache([dashInterval, dashInterval], ctx => {\r\n      for (let i = 0; i < dashInterval; i++) {\r\n        ctx.fillRect(i, i, 1, 1);\r\n      }\r\n    });\r\n\r\n    this.wavePattern = canvasCache([8, 8], ctx => {\r\n      ctx.beginPath();\r\n      ctx.arc(4.5, 2, 5, 0, Math.PI);\r\n      ctx.stroke();\r\n    });\r\n\r\n    this.crossPattern = canvasCache([3, 3], ctx => {\r\n      for (let i = 0; i < dashInterval; i++) {\r\n        ctx.fillRect(dashInterval - i - 1, i, 1, 1);\r\n        ctx.fillRect(i, i, 1, 1);\r\n      }\r\n    });\r\n\r\n    this.highTile = canvasCache([this.tileSize, this.tileSize], ctx => {\r\n      ctx.fillStyle = \"#000\";\r\n      ctx.fillRect(0, 0, this.tileSize, this.tileSize);\r\n    });\r\n\r\n    this.lowTile = canvasCache([this.tileSize, this.tileSize], ctx => {\r\n      ctx.fillStyle = \"#fff\";\r\n      ctx.fillRect(0, 0, this.tileSize, this.tileSize);\r\n      ctx.fillStyle = ctx.createPattern(this.dashPattern, \"repeat\");\r\n      ctx.fillRect(0, 0, this.tileSize, this.tileSize);\r\n    });\r\n\r\n    this.waterTile = canvasCache([this.tileSize, this.tileSize], ctx => {\r\n      ctx.fillStyle = ctx.createPattern(this.wavePattern, \"repeat\");\r\n      ctx.fillRect(0, 0, this.tileSize, this.tileSize);\r\n    });\r\n  }\r\n}\r\n", "import Gun from \"./Gun\";\r\n\r\nexport type StageConf = {\r\n  name: string;\r\n  version: string;\r\n  author: string;\r\n  terrain: string;\r\n};\r\n\r\nexport type UnitConf = {\r\n  name: string;\r\n  [index: string]: number | string;\r\n};\r\n\r\nexport type CampaignConf = {\r\n  name: string;\r\n  version: string;\r\n  author: string;\r\n  stage: string;\r\n  guns: Gun | any;\r\n  custom?: boolean;\r\n  units: { [key: string]: UnitConf };\r\n  stages: StageConf[];\r\n};\r\n\r\nexport type StateConf = {\r\n  activeTeam:number;\r\n  teams:{units:UnitState[]}[];\r\n}\r\n\r\nexport type UnitState = {\r\n  cid: number;\r\n  symbol: string; \r\n  hp?: number; \r\n  ap?: number;\r\n}\r\n\r\nexport let campaigns: CampaignConf[] = [\r\n  {\r\n    name: \"Default Campaign\",\r\n    version: \"0.1\",\r\n    author: \"Baturinsky, Red Knight\",\r\n    stage: \"Red Knight's Backyard\",\r\n    guns: {\r\n      carbine: {\r\n        name: \"Carbine\",\r\n        damage: [4, 5],\r\n        damagePenaltyPerCell: 100,\r\n        accuracyPenaltyMax: 20,\r\n\r\n        accuracy: 60,\r\n        accuracyOptimalRange: [1, 1],\r\n        accuracyPenaltyPerCell: 1,\r\n\r\n        damagePenaltyMax: 2,\r\n\r\n        breach: 0\r\n      },\r\n\r\n      sniper: {\r\n        name: \"Sniper\",\r\n        damageOptimalRange: [1, 30],\r\n        damagePenaltyPerCell: 0.1,\r\n        accuracyOptimalRange: [10, 30],\r\n        accuracyPenaltyPerCell: 1,\r\n        breach: 1,\r\n        aggression: -0.1\r\n      },\r\n\r\n      shotgun: {\r\n        name: \"Shotgun\",\r\n        damage: [6, 7],\r\n        damageOptimalRange: [1, 1],\r\n        damagePenaltyMax: 4,\r\n        damagePenaltyPerCell: 0.3,\r\n        accuracy: 80,\r\n        accuracyOptimalRange: [1, 1],\r\n        accuracyPenaltyPerCell: 5,\r\n        accuracyPenaltyMax: 40,\r\n        aggression: 0.1\r\n      }\r\n    },\r\n\r\n    units: {\r\n      g: {\r\n        name: \"Gunner\",\r\n        speed: 4,\r\n        maxHP: 14,\r\n        gun: \"carbine\"\r\n      },\r\n      a: {\r\n        name: \"Assault\",\r\n        speed: 6,\r\n        armor: 1,\r\n        gun: \"shotgun\"\r\n      },\r\n      s: {\r\n        name: \"Sharpshooter\",\r\n        maxHP: 7,\r\n        def: 10,\r\n        gun: \"sniper\"\r\n      }\r\n    },\r\n\r\n    stages: [\r\n      {\r\n        name: \"Backyard 13\",\r\n        version: \"1\",\r\n        author: \"baturinsky\",\r\n        terrain: `\r\n    ##################################################\r\n    #      #  a      ++++# + #    ++#  s             #\r\n    # #    #  +         +#   #    ++#  ++++++++      #\r\n    #      +  +         +#   #    ++#  ++++++++      #\r\n    #S#    +  +         +# * #      #                #\r\n    #      #  +          #   #      #                #\r\n    # #    #             #   #      #                #\r\n    #      #  +          ##a## ######                #\r\n    #             *                                  #\r\n    #                                                #\r\n    #A#    #             #s         #a     ~~~       #\r\n    #      #  +          #          #    ~~~~~~      #\r\n    #A#    #  #      #a  #  ###    ++   ~~~#A#~~~    #\r\n    #      #  #      #   #  #      ++       * ~~~    #\r\n    #G#    #  ########   #  #      +#    ~ # #~~     #\r\n    #      #             #          #    ~~~~~~~     #\r\n    # #    ######  ###########  #####      ~~~~      #\r\n    #      #++++      ++ # +        #                #\r\n    #S#    #+            # +   ++   +                #\r\n    #      #            +#          #                #\r\n    #         ######g    #       +  #                #\r\n    #         ######g    #####  #####                #\r\n    #                    #   g      #      #        +#\r\n    #      #          +  #                         ++#\r\n    #G#    #+    *       #+++    +++#   #     #    ++#\r\n    #      #++      +    #          #g               #\r\n    # #    ######++###########++##########    ########\r\n    #                 S+                             #\r\n    #         +              A+                      #\r\n    ##################################################\r\n    `\r\n      },\r\n      {\r\n        name: \"Red Knight's Backyard\",\r\n        version: \"1\",\r\n        author: \"Red Knight\",\r\n        terrain: `\r\n    ##################################################\r\n    ################# g+         ###++    ##      ++##\r\n    ################# ++         +                 +##\r\n    ####################               a+          +##\r\n    #################                   +    +      ##\r\n    #################* #          ++++      ##      ##\r\n    ####################                     +      ##\r\n    #################        +# + #+a##     g#   ++g##\r\n    ##################+##  ####################  +####\r\n    ###   +++  #*+  # g#   a###################      #\r\n    ###       a#   +# +#    ##########+#++++  #   # *#\r\n    #   +      ###  #  #    #        # a+++   #   ####\r\n    #  g+        #  #+ #       +  +  #              ##\r\n    #   +        ## ## #      g+  +     +           ##\r\n    #                  #  g #        #+  +++  #     ##\r\n    #    + ## ####  #     ++#  +  +  #a  +#+  #     ##\r\n    #    + g# +###  ####    #######  ##########     ##\r\n    #++  + ## ##a+  +  #   +##+a+     + #  +  ##+   ##\r\n    #       # +#       #++ +# + +   +g+ # ++ +#+    ##\r\n    #       # +#   +   #+         +++               ##\r\n    #   #++## +## #+# ##            +               ##\r\n    #   +         +         #         ++      #     ##\r\n    #                  #    # ####### ### ## ### +  ##\r\n    #   #  a+          #g   # a*##++a     #+  #  +  ##\r\n    #~~~~~~~~~ ~~~~~~####  ###########++######## +  ##\r\n    #~~~~~~~~# #~~~~~~##    a+#+ +                  ##\r\n    #~~~~~~~~ *              +     # ##         SAGA##\r\n    ###~~~~~~# #~~~~~~~~           #  #         SGGA##\r\n    ####~~~~~~~~~~~~~~~#           # *#         SAAA##\r\n    ##################################################\r\n    `\r\n      }\r\n    ]\r\n  }\r\n];\r\n", "import * as v2 from \"./v2\";\r\nimport { V2 } from \"./v2\";\r\nimport Terrain from \"./Terrain\";\r\nimport Unit from \"./Unit\";\r\nimport RenderSchematic from \"./RenderSchematic\";\r\nimport Team from \"./Team\";\r\nimport Cell from \"./Cell\";\r\nimport { campaigns as coreCampaigns, StageConf, CampaignConf } from \"./Campaigns\";\r\nimport { parseWithNewLines } from \"./Util\";\r\n\r\nexport default class Game {\r\n  ctx: CanvasRenderingContext2D;\r\n  lastLoopTimeStamp: number;\r\n  time: number = 0;\r\n  terrain: Terrain;\r\n\r\n  //eye: Char;\r\n  lastSelectedFaction: Team;\r\n  chosen: Unit;\r\n  lastChosen: Unit;\r\n  hovered: Cell;\r\n\r\n  static readonly PAI = 2;\r\n  static readonly PP = 0;\r\n  static readonly AIAI = 3;\r\n\r\n  aiSides = Game.PAI;\r\n\r\n  renderer: RenderSchematic;\r\n\r\n  canvas: HTMLCanvasElement;\r\n\r\n  campaign: CampaignConf;\r\n  stage: StageConf;\r\n  customCampaign: boolean;\r\n\r\n  static readonly savePrefix = \"2aps:\";\r\n  static readonly campaignPrefix = \"2apc:\";\r\n  static readonly savePrefixLength = Game.savePrefix.length;\r\n  static readonly timeStampLength = 13;\r\n\r\n  static loadCampaign(id: string): CampaignConf {\r\n    return parseWithNewLines(localStorage.getItem(Game.campaignPrefix + id));\r\n  }\r\n\r\n  static campaignById(id?: string) {\r\n    return (\r\n      coreCampaigns.find(c => c.name == id || c.name + \" \" + c.version == id) ||\r\n      Game.loadCampaign(id) ||\r\n      coreCampaigns[0]\r\n    );\r\n  }\r\n\r\n  static savedCampaignIds() {\r\n    return Object.keys(localStorage)\r\n      .filter(n => n.substr(0, Game.savePrefixLength) == Game.campaignPrefix)\r\n      .map(n => n.substr(Game.savePrefixLength))\r\n      .sort()\r\n      .reverse();\r\n  }\r\n\r\n  static allCampaignIds() {\r\n    return coreCampaigns\r\n      .map(c => c.name + \" \" + c.version)\r\n      .concat(Game.savedCampaignIds());\r\n  }\r\n\r\n  stageByName(name: string) {\r\n    return (\r\n      this.campaign.stages.find(s => s.name == name) || this.campaign.stages[0]\r\n    );\r\n  }\r\n\r\n  init(saveString?: string, useState: boolean = true) {\r\n    delete this.chosen;\r\n    delete this.hovered;\r\n    delete this.lastSelectedFaction;\r\n\r\n    let save;\r\n\r\n    if (saveString) {\r\n      save = parseWithNewLines(saveString);\r\n\r\n      if (save.campaign) {\r\n        this.campaign = Game.campaignById(save.campaign);\r\n      } else {\r\n        this.campaign = save;\r\n        this.customCampaign = true;\r\n      }\r\n    }\r\n\r\n    if (!this.campaign) this.campaign = Game.campaignById();\r\n    this.init2(\r\n      this.campaign,\r\n      this.stageByName(save && save.stage),\r\n      save && useState ? save.state : null\r\n    );\r\n  }\r\n\r\n  makeNotCustom() {\r\n    this.customCampaign = false;\r\n  }\r\n\r\n  init2(campaign: CampaignConf, stage: StageConf, state?: StageConf) {\r\n    this.campaign = campaign;\r\n\r\n    this.stage = stage;\r\n\r\n    this.terrain = new Terrain(\r\n      this.campaign,\r\n      this.stage,\r\n      state || null,\r\n      (animation: any) => this.renderer.draw(animation)\r\n    );\r\n\r\n    this.renderer.synch();\r\n\r\n    this.updateUI({ activeTeam: this.activeTeam });\r\n  }\r\n\r\n  initStage(stageInd: number) {\r\n    this.init2(this.campaign, this.campaign.stages[stageInd]);\r\n  }\r\n\r\n  serialize(\r\n    include: { campaign?: boolean; state?: boolean } = { state: true }\r\n  ) {\r\n    let o: any = {};\r\n\r\n    if (include.campaign || this.customCampaign) {\r\n      Object.assign(o, this.campaign);\r\n    } else {\r\n      o.campaign = this.campaign.name;\r\n    }\r\n\r\n    if (include.state) {\r\n      o.state = this.terrain.serialize();\r\n    }\r\n\r\n    o.stage = this.stage.name;\r\n\r\n    return JSON.stringify(o, null, \"  \").replace(/\\\\n/g, \"\\n\");\r\n  }\r\n\r\n  setCanvas(canvas: HTMLCanvasElement) {\r\n    this.canvas = canvas;\r\n    this.ctx = canvas.getContext(\"2d\");\r\n    if (this.renderer) this.renderer.resize();\r\n  }\r\n\r\n  constructor(public updateUI: Function) {\r\n    this.renderer = new RenderSchematic(this);\r\n\r\n    this.init();\r\n  }\r\n\r\n  over() {\r\n    return false;\r\n  }\r\n\r\n  update(timeStamp: number) {\r\n    if (!this.lastLoopTimeStamp) this.lastLoopTimeStamp = timeStamp - 0.001;\r\n    let dTime = Math.min(0.02, (timeStamp - this.lastLoopTimeStamp) / 1000);\r\n    this.lastLoopTimeStamp = timeStamp;\r\n    this.time += dTime;\r\n\r\n    this.renderer.update(dTime);\r\n\r\n    this.renderer.render(this.ctx);\r\n\r\n    if (this.over()) this.updateUI({ over: true });\r\n\r\n    if (this.chosen && !this.chosen.alive) {\r\n      delete this.chosen;\r\n    }\r\n  }\r\n\r\n  updateTooltip(tooltipAt?: V2, tooltipText?: string) {\r\n    this.updateUI({ tooltipAt, tooltipText });\r\n  }\r\n\r\n  click(x: number, y: number) {\r\n    let cell = this.renderer.cellAtScreenPos(x, y);\r\n    this.clickCell(cell);\r\n    this.renderer.resetCanvasCache();\r\n  }\r\n\r\n  isAi(team: Team) {\r\n    return this.aiSides & (1 << team.faction);\r\n  }\r\n\r\n  canPlayAs(unit: Unit) {\r\n    return !this.isAi(unit.team);\r\n  }\r\n\r\n  choose(c: Unit) {\r\n    this.chosen = c;\r\n    if (!c) return;\r\n    this.lastChosen = this.chosen;\r\n    this.chosen.calculate();\r\n    this.renderer.lookAtCid(this.chosen.cid);\r\n    this.renderer.resetCanvasCache();\r\n  }\r\n\r\n  clickCell(cell: Cell) {\r\n    if (!cell) return;\r\n\r\n    if (cell.unit) {\r\n      if (\r\n        this.chosen &&\r\n        this.chosen.team == cell.unit.team &&\r\n        this.canPlayAs(cell.unit)\r\n      ) {\r\n        this.choose(cell.unit);\r\n        return;\r\n      }\r\n\r\n      if (this.chosen && this.chosen.canDamage(cell.unit)) {\r\n        this.chosen.shoot(cell);\r\n        return;\r\n      }\r\n\r\n      if (this.chosen == cell.unit) {\r\n        this.cancel();\r\n      } else {\r\n        if (this.canPlayAs(cell.unit)) this.choose(cell.unit);\r\n      }\r\n\r\n      if (this.chosen) {\r\n        this.chosen.calculate();\r\n      }\r\n    }\r\n\r\n    if (!cell.unit && this.chosen && this.chosen.reachable(cell)) {\r\n      this.chosen.move(cell);\r\n      this.terrain.teams[Team.RED].calculate();\r\n    }\r\n\r\n    this.lastSelectedFaction = this.chosen ? this.chosen.team : this.terrain.we;\r\n  }\r\n\r\n  cancel() {\r\n    delete this.chosen;\r\n    this.renderer.resetCanvasCache();\r\n  }\r\n\r\n  momentum: V2 = [0, 0];\r\n\r\n  drag(dx: number, dy: number) {\r\n    this.renderer.screenPos = v2.sum(this.renderer.screenPos, [dx, dy]);\r\n  }\r\n\r\n  hover(x?: number, y?: number) {\r\n    let cell = this.renderer.cellAtScreenPos(x, y);\r\n\r\n    if (this.hovered == cell) return;\r\n\r\n    if (!cell) {\r\n      delete this.hovered;\r\n      this.renderer.resetCanvasCache();\r\n      return;\r\n    }\r\n\r\n    if (!cell) return;\r\n\r\n    this.hovered = cell;\r\n\r\n    let cursor = \"default\";\r\n    if ((this.chosen && this.chosen.reachable(cell)) || cell.unit)\r\n      cursor = \"pointer\";\r\n\r\n    if (this.chosen && this.chosen.canDamage(cell.unit)) {\r\n      cursor = \"crosshair\";\r\n      this.updateTooltip(\r\n        this.renderer.cidToCenterScreen(cell.cid),\r\n        `${this.chosen.hitChance(cell)}% ${this.chosen.gun\r\n          .averageDamage(this.chosen, cell)\r\n          .toFixed(1)}`\r\n      );\r\n    } else {\r\n      this.updateTooltip();\r\n    }\r\n    document.body.style.cursor = cursor;\r\n\r\n    this.updateUI({chosen:this.chosen, unitInfo:cell.unit});\r\n\r\n    if (!this.renderer.busy) this.renderer.resetCanvasCache();\r\n  }\r\n\r\n  get blue() {\r\n    return this.terrain.teams[Team.BLUE];\r\n  }\r\n\r\n  get red() {\r\n    return this.terrain.teams[Team.RED];\r\n  }\r\n\r\n  get activeTeam() {\r\n    return this.terrain.activeTeam;\r\n  }\r\n\r\n  async endTurn(aiSides: number) {\r\n    this.aiSides = aiSides;\r\n    if (this.isAi(this.activeTeam)) {\r\n      await this.endSideTurn();\r\n    } else {\r\n      do {\r\n        await this.endSideTurn();\r\n      } while (this.isAi(this.activeTeam));\r\n    }\r\n  }\r\n\r\n  async endSideTurn() {\r\n    delete this.chosen;\r\n\r\n    let team = this.activeTeam;\r\n\r\n    if (this.isAi(team)) await team.think();\r\n\r\n    this.terrain.endSideTurn();\r\n\r\n    this.renderer.resetCanvasCache();\r\n\r\n    this.updateUI({ activeTeam: this.activeTeam });\r\n  }\r\n\r\n  setAiSides(m: number) {\r\n    this.aiSides = m;\r\n  }\r\n\r\n  get hoveredChar() {\r\n    if (this.hovered) return this.hovered.unit;\r\n  }\r\n\r\n  chooseNext(delta = 1) {\r\n    if (!this.chosen) {\r\n      if (this.lastChosen) this.choose(this.lastChosen);\r\n      else this.choose(this.terrain.we.units[0]);\r\n    } else {\r\n      let team = this.chosen.team.units;\r\n      let next =\r\n        team[(team.indexOf(this.chosen) + team.length + delta) % team.length];\r\n      this.choose(next);\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n\r\n\r\n\r\n*/\r\n", "!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=function(t,n,e,i,o){for(n=n.split?n.split(\".\"):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}:\"function\"==typeof define&&define.amd?define(function(){return function(t,n,e,i,o){for(n=n.split?n.split(\".\"):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}}):t.dlv=function(t,n,e,i,o){for(n=n.split?n.split(\".\"):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}}(this);\n//# sourceMappingURL=dlv.umd.js.map\n", "import delve from 'dlv';\n\n/** @typedef {import('preact').AnyComponent} Component */\n\n/** Create an Event handler function that sets a given state property.\n *\t@param {Component} component\tThe component whose state should be updated\n *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n *\t@returns {function} linkedStateHandler\n */\nexport default function linkState(component, key, eventPath) {\n\tlet path = key.split('.'),\n\t\tcache = component.__lsc || (component.__lsc = {});\n\n\treturn cache[key+eventPath] || (cache[key+eventPath] = function(e) {\n\t\tlet t = e && e.target || this,\n\t\t\tstate = {},\n\t\t\tobj = state,\n\t\t\tv = typeof eventPath==='string' ? delve(e, eventPath) : (t && t.nodeName) ? (t.type.match(/^che|rad/) ? t.checked : t.value) : e,\n\t\t\ti = 0;\n\t\tfor ( ; i<path.length-1; i++) {\n\t\t\tobj = obj[path[i]] || (obj[path[i]] = !i && component.state[path[i]] || {});\n\t\t}\n\t\tobj[path[i]] = v;\n\t\tcomponent.setState(state);\n\t});\n}\n", "import { h, render, Component } from \"preact\";\r\n\r\nexport default function Help() {\r\n  return (\r\n    <div id=\"help\">\r\n      <h3>This is a prototype of a browser XCOM-like game.</h3>\r\n\r\n      <p>\r\n        Currently it only has three unit types, no complex moves like overwatch,\r\n        and only one map, but it will grow. It's already fully playable and\r\n        closely matches XCOM conventions. Left click on your\r\n        <span style=\"color:blue\">(blue)</span> units to select, click on empty\r\n        space to move or on enemy to fire. Right click to deselect. Each unit\r\n        has two action points (hence the game's name), shown as \"horns\". And\r\n        some Hit Points, shown as the \"beard\". Units, naturally, die when out of\r\n        HP, but can replenish HPs with \"*\" pickups. When next to cover (black or\r\n        dashed squares), unit is protected by it on respective side and can\r\n        \"peek\" out of it to shoot or, sadly, be shot at, just like in XCOM.\r\n        Black squares are high cover, granting 40% defence and blocking vision.\r\n        Dashed squares are low cover, giving only 20$ defence and no LOS\r\n        obsruction.\r\n      </p>\r\n\r\n      <p>\r\n        When you hover the mouse over the square, you can see what is visible\r\n        from it, and which enemies are flanked from (i.e. have no cover, marked{\" \"}\r\n        <span style=\"background:#8f8\">green</span>), or \r\n        <span style=\"background:#f88\">flanking</span> this square, or \r\n        <span style=\"background:#ff8;\">both</span>.\r\n      </p>\r\n\r\n      <p>\r\n        You can play against AI, it's a default mode. AI is quite competent,\r\n        seeking cover and trying to flank you when possible. Also you can switch\r\n        to 2 player mode, or even AI vs AI. Difference, basically, is that when\r\n        you press \"End turn\", AI will make moves, depending on mode, for none,\r\n        one or both sides if they have APs remained.\r\n      </p>\r\n\r\n      <p>\r\n        Even more, you can play on your own map! Just switch to Edit mode, and\r\n        edit text field. # is high cover, + is low cover, G, A, S are blue units\r\n        and g, a, s are red units. Note that map borders should always be high\r\n        cover. Don't forget to press \"Apply\" when you done.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n", "export let Sharpshooter = `\r\nHits accurately and hard at long range, regardless of target's armor.\r\nHas extra defence, making him nearly untouchable when in cover. \r\nPretty helpess up close and has low HP.\r\n`\r\n\r\nexport let Assault = `\r\nPsycho with a shotgun. \r\nFast and even has a bit of armor to survive close quater fight a bit longer.\r\nCan deal a lot of damage, but only up close.\r\n`\r\n\r\nexport let Gunner = `\r\nEffective in any range and has extra hp.\r\nQuite slow.\r\n`\r\n\r\n", "export let mouseAt: [number, number];\r\nimport { eachFrame, bind, signed, svgImg } from \"./Util\";\r\nimport Game from \"./Game\";\r\nimport { h, render, Component, createRef, FunctionalComponent } from \"preact\";\r\nimport linkState from \"linkstate\";\r\nimport Help from \"./Help\";\r\nimport { V2 } from \"./v2\";\r\nimport * as v2 from \"./v2\";\r\nimport * as lang from \"./lang\";\r\nimport { StageConf, CampaignConf } from \"./Campaigns\";\r\nimport Unit from \"./Unit\";\r\nimport Team from \"./Team\";\r\n\r\nlet paused = false;\r\n\r\nfunction mountEventsToCanvas(gui: GUI, c: HTMLCanvasElement) {\r\n  let drag = 0;\r\n\r\n  c.addEventListener(\"mouseup\", e => {\r\n    drag = 0;\r\n  });\r\n\r\n  c.addEventListener(\"mousedown\", e => {\r\n    if (e.button == 0) {\r\n      gui.game.click(e.offsetX, e.offsetY);\r\n    }\r\n\r\n    if (e.button == 2) {\r\n      gui.game.cancel();\r\n    }\r\n\r\n    if (gui.state.page == \"play\") {\r\n      if (e.button == 3) {\r\n        if (location.hash == \"#prev\") history.forward();\r\n        else history.pushState({}, document.title, \"#prev\");\r\n        gui.game.chooseNext();\r\n      }\r\n      if (e.button == 4) {\r\n        gui.game.chooseNext(-1);\r\n      }\r\n    }\r\n  });\r\n\r\n  c.addEventListener(\"mousemove\", e => {\r\n    if (e.buttons & 6) {\r\n      drag++;\r\n      if (drag >= 3) gui.game.drag(e.movementX, e.movementY);\r\n    }\r\n    gui.game.hover(e.offsetX, e.offsetY);\r\n  });\r\n\r\n  c.addEventListener(\"mouseleave\", e => {\r\n    console.log(\"leave\");\r\n    gui.game.hover();\r\n  });\r\n\r\n  c.addEventListener(\"mouseenter\", e => {});\r\n\r\n  c.addEventListener(\r\n    \"contextmenu\",\r\n    function(e) {\r\n      e.preventDefault();\r\n    },\r\n    false\r\n  );\r\n}\r\n\r\nclass NewGame extends Component<{\r\n  campaigns: string[];\r\n  startStage: (CampaignConf, StageConf) => void;\r\n}> {\r\n  state = { campaign: null as CampaignConf, campaignInd: -1 };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"new-game row\">\r\n        <div>\r\n          <h4>Campaigns</h4>\r\n          {this.props.campaigns.map((id, i) => (\r\n            <div>\r\n              <button\r\n                class={i == this.state.campaignInd ? \"long pressed\" : \"long\"}\r\n                onClick={() => this.selectCampaign(i)}\r\n              >\r\n                {id.search(/[0-9]{13}/) == 0\r\n                  ? id.substr(Game.timeStampLength)\r\n                  : id}\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          {this.state.campaign && [\r\n            <h4>Scenarios</h4>,\r\n            this.state.campaign.stages.map((stage, i) => (\r\n              <div>\r\n                <button class=\"long\" onClick={() => this.startStage(i)}>\r\n                  {stage.name}\r\n                </button>\r\n              </div>\r\n            ))\r\n          ]}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  selectCampaign(campaignInd: number) {\r\n    this.setState({\r\n      campaign: Game.campaignById(this.props.campaigns[campaignInd]),\r\n      campaignInd\r\n    });\r\n  }\r\n\r\n  startStage(stageInd: number) {\r\n    this.props.startStage(\r\n      this.state.campaign,\r\n      this.state.campaign.stages[stageInd]\r\n    );\r\n  }\r\n}\r\n\r\nlet AbilityButton = props => \r\n  <button>\r\n    <svg width=\"32px\" height=\"32px\">\r\n      <filter\r\n        id=\"shadow\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: `<feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"1\"/>`\r\n        }}\r\n      />\r\n      <g style=\"fill:none; stroke:#999; filter:url(#shadow);\">\r\n        {props.children}\r\n      </g>\r\n    </svg>\r\n  </button>;\r\n\r\n\r\nlet Saves: FunctionalComponent<{\r\n  saves: string[];\r\n  campaigns: string[];\r\n  save: () => void;\r\n  saveCampaign?: () => void;\r\n  load: (id: string) => void;\r\n  del: (id: string) => void;\r\n  changeName: (from: string, to: string) => void;\r\n}> = props => {\r\n  let c = false;\r\n  return (\r\n    <div class=\"save\">\r\n      <button onClick={props.save}>Save Game</button>\r\n      {props.saves\r\n        .sort()\r\n        .reverse()\r\n        .concat([null], props.campaigns.sort().reverse())\r\n        .map(key =>\r\n          key ? (\r\n            <div class=\"save-row\">\r\n              <button class=\"short\" onClick={() => props.del(key)}>\r\n                Del\r\n              </button>\r\n              &nbsp;\r\n              {new Date(+key.substr(0, Game.timeStampLength)).toLocaleString()}\r\n              <input\r\n                class=\"save-name\"\r\n                disabled={c}\r\n                onChange={e =>\r\n                  props.changeName(key, (e.target as HTMLInputElement).value)\r\n                }\r\n                value={key.substr(Game.timeStampLength)}\r\n              />\r\n              <button onClick={() => props.load(key)}>Load</button>\r\n            </div>\r\n          ) : (\r\n            ((c = true),\r\n            [\r\n              <h4>Custom Campaigns</h4>,\r\n              props.saveCampaign && (\r\n                <button onClick={props.saveCampaign}>Save Campaign</button>\r\n              )\r\n            ])\r\n          )\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport class GUI extends Component {\r\n  state = {\r\n    aiSides: 2,\r\n    activeTeam: null as Team,\r\n    page: \"play\",\r\n    game: undefined as Game,\r\n    stageEdit: \"\",\r\n    modCampaign: true,\r\n    modState: true,\r\n    saves: [] as string[],\r\n    campaigns: [] as string[],\r\n    unitInfo: null as Unit,\r\n    chosen: null as Unit,\r\n    aiTurn: false,\r\n    tooltipText: null as string,\r\n    tooltipAt: null as V2\r\n  };\r\n\r\n  canvas = createRef<HTMLCanvasElement>();\r\n  tooltip = createRef<HTMLElement>();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    document.addEventListener(\"keydown\", e => {\r\n      switch (e.code) {\r\n        case \"Escape\":\r\n          if (this.page == \"play\") this.setPage(\"saves\");\r\n          else this.setPage(\"play\");\r\n          break;\r\n        case \"Tab\":\r\n          this.game.chooseNext();\r\n          break;\r\n        case \"KeyS\":\r\n          if (e.shiftKey) this.setPage(\"saves\");\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  get game() {\r\n    return this.state.game;\r\n  }\r\n\r\n  get page() {\r\n    return this.state.page;\r\n  }\r\n\r\n  gameUpdated(g: Game) {\r\n    this.setState({ game: g });\r\n  }\r\n\r\n  updateSaves() {\r\n    let saves = [];\r\n    let campaigns = [];\r\n    for (let key in localStorage) {\r\n      let prefix = key.substr(0, Game.savePrefixLength);\r\n      if (prefix == Game.savePrefix) {\r\n        saves.push(key.substr(Game.savePrefixLength));\r\n      }\r\n      if (prefix == Game.campaignPrefix) {\r\n        campaigns.push(key.substr(Game.savePrefixLength));\r\n      }\r\n    }\r\n    this.setState({ saves, campaigns });\r\n  }\r\n\r\n  updateStageEdit() {\r\n    this.setState({\r\n      stageEdit: this.game.serialize({\r\n        campaign: this.state.modCampaign,\r\n        state: this.state.modState\r\n      })\r\n    });\r\n  }\r\n\r\n  setPage(page: string) {\r\n    if (this.state.page == \"edit\" && this.state.stageEdit) {\r\n      this.game.init(this.state.stageEdit);\r\n    }\r\n\r\n    this.setState({ page: page });\r\n    if (page == \"edit\") {\r\n      this.updateStageEdit();\r\n    }\r\n    if (page != \"play\") {\r\n      document.body.style.cursor = \"default\";\r\n    }\r\n    if (page == \"new-game\") {\r\n      /*this.game.init();\r\n      this.setPage(\"play\");*/\r\n    }\r\n  }\r\n\r\n  /*apply() {\r\n    this.game.init(this.state.stageEdit);\r\n    this.setPage(\"play\");\r\n  }*/\r\n\r\n  cancelEdit() {\r\n    this.setState({ stageEdit: null });\r\n    this.setPage(\"menu\");\r\n  }\r\n\r\n  endTurn() {\r\n    this.game.endTurn(this.state.aiSides);\r\n  }\r\n\r\n  updateUI = (event: {\r\n    aiSides?: number;\r\n    aiTurn?: boolean;\r\n    tooltipAt?: V2;\r\n    tooltipText?: string;\r\n    unitInfo?: string;\r\n  }) => {\r\n    this.setState(event);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.gameUpdated(new Game(this.updateUI));\r\n    this.updateSaves();\r\n\r\n    let c = this.canvas.current;\r\n    mountEventsToCanvas(this, c);\r\n    this.game.setCanvas(c);\r\n\r\n    window.onresize = () => {\r\n      this.game.renderer.resize();\r\n    };\r\n\r\n    eachFrame(time => {\r\n      if (this.game && !paused && !this.game.over()) this.game.update(time);\r\n    });\r\n  }\r\n\r\n  displayIfPage(p: string) {\r\n    return this.state.page == p ? \"display:flex\" : \"display:none\";\r\n  }\r\n\r\n  toggleAI(side: number) {\r\n    let aiSides = this.state.aiSides ^ (1 << side);\r\n    this.setState({ aiSides });\r\n    this.game.setAiSides(aiSides);\r\n  }\r\n\r\n  topButtons(): [string, Function | string][] {\r\n    let page = this.state.page;\r\n    if (page == \"play\") {\r\n      return [\r\n        [\"AI\", () => this.toggleAI(0)],\r\n        [\"AI\", () => this.toggleAI(1)],\r\n        [undefined, undefined],\r\n        [\"Menu\", \"menu\"]\r\n      ];\r\n    } else {\r\n      return [\r\n        [\"New Game\", \"new-game\"],\r\n        [\"Saves\", \"saves\"],\r\n        [\"Settings\", \"settings\"],\r\n        [\"Editor\", \"edit\"],\r\n        [\"Help\", \"help\"],\r\n        [undefined, undefined],\r\n        [\"Continue\", \"play\"]\r\n      ];\r\n    }\r\n  }\r\n\r\n  @bind saveCampaign() {\r\n    let save = this.state.game.serialize({ campaign: true, state: false });\r\n    let id = new Date().getTime() + this.state.game.campaign.name;\r\n\r\n    localStorage.setItem(Game.campaignPrefix + id, save);\r\n    this.updateSaves();\r\n  }\r\n\r\n  @bind saveGame() {\r\n    let save = this.state.game.serialize();\r\n    let id =\r\n      new Date().getTime() +\r\n      this.state.game.campaign.name +\r\n      \": \" +\r\n      this.state.game.stage.name;\r\n\r\n    localStorage.setItem(Game.savePrefix + id, save);\r\n    this.updateSaves();\r\n  }\r\n\r\n  @bind delGame(id: string) {\r\n    localStorage.removeItem(Game.savePrefix + id);\r\n    localStorage.removeItem(Game.campaignPrefix + id);\r\n    this.updateSaves();\r\n  }\r\n\r\n  @bind loadGame(id: string) {\r\n    let save = localStorage.getItem(Game.savePrefix + id);\r\n    if (save) this.game.init(save);\r\n    else {\r\n      save = localStorage.getItem(Game.campaignPrefix + id);\r\n      this.game.init(save, false);\r\n    }\r\n\r\n    this.setPage(\"play\");\r\n  }\r\n\r\n  @bind changeGameName(from: string, to: string) {\r\n    let newHeader = Game.savePrefix + new Date().getTime() + to;\r\n    let oldHeader = Game.savePrefix + from;\r\n    if (!localStorage[newHeader] && newHeader != oldHeader) {\r\n      localStorage.setItem(newHeader, localStorage[oldHeader]);\r\n      localStorage.removeItem(oldHeader);\r\n      this.updateSaves();\r\n    }\r\n  }\r\n\r\n  startStage(campaign: CampaignConf, stage: StageConf) {\r\n    this.game.init2(campaign, stage);\r\n    this.game.makeNotCustom();\r\n    this.setPage(\"play\");\r\n  }\r\n\r\n  renderPage() {\r\n    switch (this.state.page) {\r\n      case \"help\":\r\n        return <Help />;\r\n      case \"saves\":\r\n        return (\r\n          <Saves\r\n            saves={this.state.saves}\r\n            campaigns={this.state.campaigns}\r\n            saveCampaign={this.game.customCampaign && this.saveCampaign}\r\n            save={this.saveGame}\r\n            load={this.loadGame}\r\n            del={this.delGame}\r\n            changeName={this.changeGameName}\r\n          />\r\n        );\r\n      case \"new-game\":\r\n        return (\r\n          <NewGame\r\n            campaigns={Game.allCampaignIds()}\r\n            startStage={(campaign, stage) => this.startStage(campaign, stage)}\r\n          />\r\n        );\r\n      default:\r\n        return <div />;\r\n    }\r\n  }\r\n\r\n  @bind toggleModCampaign() {\r\n    this.setState({ modCampaign: !this.state.modCampaign });\r\n    this.updateStageEdit();\r\n  }\r\n\r\n  @bind toggleModState() {\r\n    this.setState({ modState: !this.state.modState });\r\n    this.updateStageEdit();\r\n  }\r\n\r\n  sideButtonText(i: number): JSX.Element {\r\n    let ai = this.state.aiSides & (1 << i);\r\n    let text = <span>{ai ? \"AI\" : \"Player\"}</span>;\r\n    if (this.state.activeTeam && this.state.activeTeam.faction == i)\r\n      text = <u>{text}</u>;\r\n    return text;\r\n  }\r\n\r\n  render() {\r\n    let state = this.state;\r\n    let page = state.page;\r\n    let cursor = svgImg(\r\n      `width=\"32\" height=\"32\" fill=\"none\" stroke=\"black\"`,\r\n      `<circle r=\"12\" cx=\"16\" cy=\"16\" /><path d=\"M16 0 v32 M0 16 h32\" />`\r\n    );    \r\n  \r\n    return (\r\n      <div style={`cursor:${cursor} 16 16, auto;`}>\r\n        <div class=\"center-screen\" style={this.displayIfPage(\"play\")}>\r\n          <canvas ref={this.canvas} id=\"main\"></canvas>\r\n        </div>\r\n\r\n        <div class=\"center-horisontal\">\r\n          <div id=\"editor\" style={this.displayIfPage(\"edit\")}>\r\n            <textarea\r\n              onChange={linkState(this, \"stageEdit\")}\r\n              cols={100}\r\n              rows={40}\r\n              value={this.state.stageEdit}\r\n              id=\"edit-area\"\r\n            />\r\n            <div class=\"row\">\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={state.modCampaign}\r\n                  onChange={this.toggleModCampaign}\r\n                ></input>\r\n                Modify Campaign\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={state.modState}\r\n                  onChange={this.toggleModState}\r\n                ></input>\r\n                Modify State\r\n              </label>\r\n              <span class=\"flex-spacer\"></span>\r\n              <button id=\"endb\" onClick={e => this.cancelEdit()}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {[this.renderPage()]}\r\n        </div>\r\n\r\n        <div class=\"top-buttons row\">\r\n          {this.topButtons().map(([text, action], i) =>\r\n            text ? (\r\n              <button\r\n                class={\r\n                  \"medium\" +\r\n                  (page == \"play\" && i <= 2 ? \" side\" + i : \"\") +\r\n                  (page == action ? \" pressed\" : \"\")\r\n                }\r\n                onClick={e =>\r\n                  action instanceof Function ? action() : this.setPage(action)\r\n                }\r\n              >\r\n                {page == \"play\" && i <= 2 ? this.sideButtonText(i) : text}\r\n              </button>\r\n            ) : (\r\n              <span class=\"flex-spacer\"></span>\r\n            )\r\n          )}\r\n        </div>\r\n        {state.unitInfo && page == \"play\" && (\r\n          <UnitInfo unit={state.unitInfo} chosen={this.state.chosen} />\r\n        )}\r\n\r\n        <div class=\"bottom-buttons row\">\r\n          <span class=\"flex-spacer\"></span>\r\n          {page == \"play\" && !state.aiTurn && (\r\n            <button id=\"endb\" onClick={e => this.endTurn()}>\r\n              End Turn\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div class=\"ability-buttons\">\r\n          <AbilityButton>\r\n            <circle r=\"12\" cx=\"16\" cy=\"16\" />\r\n            <path d=\"M16,0 v32 M0 16 h32\" />\r\n          </AbilityButton>\r\n          <AbilityButton>\r\n            <circle r=\"10\" cx=\"16\" cy=\"16\" />\r\n            <circle r=\"6\" cx=\"16\" cy=\"16\" />\r\n            <path d=\"M0,16 Q16,-4 32,16 Q16,36 0,16\" />\r\n          </AbilityButton>\r\n          <AbilityButton>\r\n            <path d=\"M24,4 L0,16 L24,28 M16,8 a10,10 45 0 1 0,16 v-16\" />\r\n          </AbilityButton>\r\n          <AbilityButton>\r\n            <path d=\"M4,0 q24,0 24,12 h-4 q0,-6 -14,-6 l2,8 h-4 L4,0 M16,28 l-8,-8 l16,0 l-8,8\" />\r\n          </AbilityButton>\r\n          <AbilityButton>\r\n            <path d=\"M4,0 q24,0 24,12 h-4 q0,-6 -14,-6 l2,8 h-4 L4,0 M16,20 l-8,8 l16,0 l-8,-8\" />\r\n          </AbilityButton>\r\n          <AbilityButton>\r\n            <path d=\"M4,4 h24 v24 h-24 v-24 m0,8 h25 m-16,0 c0,6 6,6 6,0\" />\r\n          </AbilityButton>\r\n        </div>\r\n\r\n        <div\r\n          id=\"tooltip\"\r\n          style={\r\n            state.tooltipAt\r\n              ? `display:block; left:${state.tooltipAt[0] +\r\n                  30 +\r\n                  this.canvas.current.offsetLeft}; top:${state.tooltipAt[1]}`\r\n              : `display:none`\r\n          }\r\n        >\r\n          {state.tooltipText}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet UnitInfo: FunctionalComponent<{ unit: Unit; chosen: Unit }> = ({\r\n  unit,\r\n  chosen\r\n}) => {\r\n  let accMods = {};\r\n  let hitChance = 0;\r\n  if (unit && chosen && unit != chosen)\r\n    hitChance = chosen.hitChance(unit.cell, unit, false, accMods);\r\n\r\n  return (\r\n    <div id=\"unitInfo\">\r\n      {unit.name.toUpperCase()} <b>{unit.hp}</b>HP <b>{unit.ap}</b>AP{\" \"}\r\n      <b>{unit.stress}</b>SP\r\n      <br />\r\n      velocity{renderV2(unit.velocity)} focus{renderV2(unit.focus)}\r\n      <br />\r\n      {hitChance && (\r\n        <div>\r\n          Hit Chance: <b>{hitChance}</b>\r\n          {Object.keys(accMods)\r\n            .filter(key => accMods[key])\r\n            .map(key => (\r\n              <span class=\"nobr\">\r\n                {\" \"}\r\n                {key}\r\n                <b>{signed(accMods[key])}</b>\r\n              </span>\r\n            ))}\r\n        </div>\r\n      )}\r\n      {lang[unit.name]}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction renderV2(v: V2) {\r\n  let angle = (Math.atan2(v[1], v[0]) / Math.PI) * 180;\r\n  let length = Math.round(v2.length(v));\r\n  return (\r\n    <span>\r\n      <svg width=\"10px\" height=\"10px\">\r\n        <path\r\n          d=\"M5 5 l 0 -5 l 5 5 l -5 5 l 0 -4 l -5 0 l 0 -2 l 5 0 \"\r\n          transform={`rotate(${angle} 5 5)`}\r\n        />\r\n      </svg>\r\n      <b>{length}</b>\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction renderArrow(v: [number, number]) {\r\n  let angle = (Math.atan2(v[1], v[0]) / Math.PI) * 180;\r\n  return (\r\n    <svg width=\"10px\" height=\"10px\">\r\n      <path\r\n        style=\"fill:#000;\"\r\n        d=\"M5 5 l 0 -5 l 5 5 l -5 5 l 0 -4 l -5 0 l 0 -2 l 5 0 \"\r\n        transform={`rotate(${angle} 5 5)`}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n", "import { h, render } from \"preact\";\r\nimport { GUI } from \"./GUI\";\r\nimport { svgImg } from \"./Util\";\r\n\r\nwindow.onload = function() {\r\n  let el = render(<GUI />, document.body) as HTMLElement;\r\n};\r\n"],
  "mappings": "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",
  "names": ["slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "createRef", "current", "Fragment", "Component", "context", "this", "getDomSibling", "childIndex", "indexOf", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "push", "process", "debounceRendering", "setTimeout", "queue", "__r", "sort", "a", "b", "some", "component", "commitQueue", "oldVNode", "oldDom", "parentDom", "__P", "diff", "ownerSVGElement", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "j", "childVNode", "newDom", "firstChildDom", "refs", "oldChildren", "oldChildrenLength", "Array", "isArray", "reorderChildren", "placeChild", "unmount", "applyRef", "tmp", "placeChild", "parentDom", "childVNode", "oldVNode", "oldChildren", "newDom", "oldDom", "nextDom", "sibDom", "j", "__d", "parentNode", "outer", "appendChild", "nextSibling", "length", "insertBefore", "diffProps", "dom", "newProps", "oldProps", "isSvg", "hydrate", "i", "setProperty", "setStyle", "style", "key", "value", "IS_NON_DIMENSIONAL", "test", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "slice", "l", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "indexOf", "removeAttribute", "setAttribute", "this", "type", "options", "event", "diff", "newVNode", "globalContext", "excessDomChildren", "commitQueue", "isHydrating", "tmp", "c", "isNew", "oldState", "snapshot", "clearProcessingException", "provider", "componentContext", "renderHook", "count", "renderResult", "newType", "constructor", "__h", "__e", "props", "contextType", "__c", "__", "__E", "prototype", "render", "Component", "doRender", "sub", "state", "context", "_sb", "__s", "getDerivedStateFromProps", "assign", "componentWillMount", "componentDidMount", "push", "componentWillReceiveProps", "shouldComponentUpdate", "__v", "__k", "forEach", "vnode", "componentWillUpdate", "componentDidUpdate", "__P", "__r", "getChildContext", "getSnapshotBeforeUpdate", "Fragment", "children", "diffChildren", "Array", "isArray", "base", "diffElementNodes", "diffed", "commitRoot", "root", "some", "cb", "call", "child", "oldHtml", "newHtml", "nodeType", "localName", "document", "createTextNode", "createElementNS", "createElement", "is", "data", "childNodes", "EMPTY_OBJ", "dangerouslySetInnerHTML", "attributes", "__html", "innerHTML", "getDomSibling", "removeNode", "checked", "applyRef", "ref", "current", "unmount", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "ownerSVGElement", "firstChild", "slice", "EMPTY_ARR", "options", "__e", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "__", "__c", "constructor", "getDerivedStateFromError", "setState", "__d", "componentDidCatch", "__E", "e", "vnodeId", "isValidElement", "Component", "prototype", "update", "callback", "s", "this", "__s", "state", "assign", "props", "__v", "_sb", "push", "enqueueRender", "forceUpdate", "render", "Fragment", "rerenderQueue", "process", "__r", "i", "i", "v", "r", "t", "w", "h", "a", "b", "i", "n", "v", "a", "b", "m", "d", "v", "scale", "a", "b", "n", "a", "b", "y", "i", "t", "y", "x", "p", "c", "i", "u", "t", "c", "o", "cid", "l", "p", "a", "b", "c", "i", "d", "o", "dist", "t", "c", "o", "s", "i", "y", "v", "u", "_", "x", "dot", "y", "l", "d", "t", "i", "g", "key", "ctx", "a", "y", "v", "b", "o", "c", "n", "s", "o", "y", "m", "module", "t", "n", "e", "i", "o", "split", "length", "component", "key", "eventPath", "path", "cache", "__lsc", "target", "this", "state", "obj", "v", "delve", "nodeName", "type", "match", "checked", "value", "setState", "c", "e", "i", "g", "campaigns", "p", "v", "length"]
}
